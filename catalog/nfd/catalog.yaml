---
defaultChannel: stable
icon:
  base64data: 
  mediatype: image/png
name: nfd
schema: olm.package
---
entries:
- name: nfd.4.17.0-202409100034
  skipRange: '>=4.9.0 <4.17.0-202409100034'
- name: nfd.4.17.0-202410011205
  skipRange: '>=4.9.0 <4.17.0-202410011205'
- name: nfd.4.17.0-202410112132
  skipRange: '>=4.9.0 <4.17.0-202410112132'
- name: nfd.4.17.0-202410211206
  skipRange: '>=4.9.0 <4.17.0-202410211206'
- name: nfd.4.17.0-202410241236
  skipRange: '>=4.9.0 <4.17.0-202410241236'
- name: nfd.4.17.0-202411121637
  skipRange: '>=4.9.0 <4.17.0-202411121637'
- name: nfd.4.17.0-202411190204
  skipRange: '>=4.9.0 <4.17.0-202411190204'
- name: nfd.4.17.0-202411251634
  skipRange: '>=4.9.0 <4.17.0-202411251634'
- name: nfd.4.17.0-202412051604
  skipRange: '>=4.9.0 <4.17.0-202412051604'
- name: nfd.4.17.0-202412170235
  skipRange: '>=4.9.0 <4.17.0-202412170235'
  skips:
  - nfd.4.17.0-202412050933
  - nfd.4.17.0-202410011205
  - nfd.4.17.0-202411230231
  - nfd.4.17.0-202411121637
  - nfd.4.17.0-202411251634
  - nfd.4.17.0-202406200511
  - nfd.4.17.0-202408151545
  - nfd.4.17.0-202410112132
  - nfd.4.17.0-202412051604
  - nfd.4.17.0-202408050714
  - nfd.4.17.0-202411131633
  - nfd.4.17.0-202410211206
  - nfd.4.17.0-202408271906
  - nfd.4.17.0-202412122104
  - nfd.4.17.0-202409100034
  - nfd.4.17.0-202410241236
  - nfd.4.17.0-202406041111
  - nfd.4.17.0-202411190204
  - nfd.4.17.0-202411120905
  - nfd.4.17.0-202407140940
  - nfd.4.17.0-202409030638
name: stable
package: nfd
schema: olm.channel
---
image: registry.redhat.io/openshift4/ose-cluster-nfd-operator-bundle@sha256:1247b2775eac26dbbebb21e36dd28f99eab80c79b2b590f4d1dace94a6608ae9
name: nfd.4.17.0-202409100034
package: nfd
properties:
- type: olm.gvk
  value:
    group: nfd.openshift.io
    kind: NodeFeature
    version: v1alpha1
- type: olm.gvk
  value:
    group: nfd.openshift.io
    kind: NodeFeatureDiscovery
    version: v1
- type: olm.gvk
  value:
    group: nfd.openshift.io
    kind: NodeFeatureGroup
    version: v1alpha1
- type: olm.gvk
  value:
    group: nfd.openshift.io
    kind: NodeFeatureRule
    version: v1alpha1
- type: olm.gvk
  value:
    group: topology.node.k8s.io
    kind: NodeResourceTopology
    version: v1alpha1
- type: olm.gvk
  value:
    group: topology.node.k8s.io
    kind: NodeResourceTopology
    version: v1alpha2
- type: olm.package
  value:
    packageName: nfd
    version: 4.17.0-202409100034
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "nfd.openshift.io/v1",
            "kind": "NodeFeatureDiscovery",
            "metadata": {
              "name": "nfd-instance",
              "namespace": "openshift-nfd"
            },
            "spec": {
              "customConfig": {
                "configData": "#    - name: \"more.kernel.features\"\n#      matchOn:\n#      - loadedKMod: [\"example_kmod3\"]\n#    - name: \"more.features.by.nodename\"\n#      value: customValue\n#      matchOn:\n#      - nodename: [\"special-.*-node-.*\"]\n"
              },
              "operand": {
                "image": "registry.redhat.io/openshift4/ose-node-feature-discovery-rhel9@sha256:4626d3729cea47c14c9d192b5630089b6d9c127faf6df89340d82061003fa574",
                "imagePullPolicy": "IfNotPresent",
                "servicePort": 12000
              },
              "workerConfig": {
                "configData": "core:\n#  labelWhiteList:\n#  noPublish: false\n  sleepInterval: 60s\n#  sources: [all]\n#  klog:\n#    addDirHeader: false\n#    alsologtostderr: false\n#    logBacktraceAt:\n#    logtostderr: true\n#    skipHeaders: false\n#    stderrthreshold: 2\n#    v: 0\n#    vmodule:\n##   NOTE: the following options are not dynamically run-time \n##          configurable and require a nfd-worker restart to take effect\n##          after being changed\n#    logDir:\n#    logFile:\n#    logFileMaxSize: 1800\n#    skipLogHeaders: false\nsources:\n#  cpu:\n#    cpuid:\n##     NOTE: whitelist has priority over blacklist\n#      attributeBlacklist:\n#        - \"BMI1\"\n#        - \"BMI2\"\n#        - \"CLMUL\"\n#        - \"CMOV\"\n#        - \"CX16\"\n#        - \"ERMS\"\n#        - \"F16C\"\n#        - \"HTT\"\n#        - \"LZCNT\"\n#        - \"MMX\"\n#        - \"MMXEXT\"\n#        - \"NX\"\n#        - \"POPCNT\"\n#        - \"RDRAND\"\n#        - \"RDSEED\"\n#        - \"RDTSCP\"\n#        - \"SGX\"\n#        - \"SSE\"\n#        - \"SSE2\"\n#        - \"SSE3\"\n#        - \"SSE4.1\"\n#        - \"SSE4.2\"\n#        - \"SSSE3\"\n#      attributeWhitelist:\n#  kernel:\n#    kconfigFile: \"/path/to/kconfig\"\n#    configOpts:\n#      - \"NO_HZ\"\n#      - \"X86\"\n#      - \"DMI\"\n  pci:\n    deviceClassWhitelist:\n      - \"0200\"\n      - \"03\"\n      - \"12\"\n    deviceLabelFields:\n#      - \"class\"\n      - \"vendor\"\n#      - \"device\"\n#      - \"subsystem_vendor\"\n#      - \"subsystem_device\"\n#  usb:\n#    deviceClassWhitelist:\n#      - \"0e\"\n#      - \"ef\"\n#      - \"fe\"\n#      - \"ff\"\n#    deviceLabelFields:\n#      - \"class\"\n#      - \"vendor\"\n#      - \"device\"\n#  custom:\n#    - name: \"my.kernel.feature\"\n#      matchOn:\n#        - loadedKMod: [\"example_kmod1\", \"example_kmod2\"]\n#    - name: \"my.pci.feature\"\n#      matchOn:\n#        - pciId:\n#            class: [\"0200\"]\n#            vendor: [\"15b3\"]\n#            device: [\"1014\", \"1017\"]\n#        - pciId :\n#            vendor: [\"8086\"]\n#            device: [\"1000\", \"1100\"]\n#    - name: \"my.usb.feature\"\n#      matchOn:\n#        - usbId:\n#          class: [\"ff\"]\n#          vendor: [\"03e7\"]\n#          device: [\"2485\"]\n#        - usbId:\n#          class: [\"fe\"]\n#          vendor: [\"1a6e\"]\n#          device: [\"089a\"]\n#    - name: \"my.combined.feature\"\n#      matchOn:\n#        - pciId:\n#            vendor: [\"15b3\"]\n#            device: [\"1014\", \"1017\"]\n#          loadedKMod : [\"vendor_kmod1\", \"vendor_kmod2\"]\n"
              }
            }
          },
          {
            "apiVersion": "nfd.openshift.io/v1alpha1",
            "kind": "NodeFeatureRule",
            "metadata": {
              "name": "my-sample-rule-object"
            },
            "spec": {
              "rules": [
                {
                  "labels": {
                    "my-sample-feature": "true"
                  },
                  "matchFeatures": [
                    {
                      "feature": "kernel.loadedmodule",
                      "matchExpressions": {
                        "dummy": {
                          "op": "Exists"
                        }
                      }
                    },
                    {
                      "feature": "kernel.config",
                      "matchExpressions": {
                        "X86": {
                          "op": "In",
                          "value": [
                            "y"
                          ]
                        }
                      }
                    }
                  ],
                  "name": "my sample rule"
                }
              ]
            }
          }
        ]
      capabilities: Deep Insights
      categories: Integration & Delivery,OpenShift Optional
      containerImage: registry.redhat.io/openshift4/ose-cluster-nfd-rhel9-operator@sha256:153a40b3f2f2202d8e010406a263582a17cb2ab1df4cab25b60d1b4605c07f26
      createdAt: "2024-07-28T08:10:39Z"
      description: |-
        The Node Feature Discovery Operator manages the detection of hardware features and configuration in a Kubernetes cluster by labeling the nodes with hardware-specific information. The Node Feature Discovery (NFD) will label the host with node-specific attributes, like PCI cards, kernel, or OS version, and many more.

        NFD consists  of the following software components:

        The NFD Operator is based on the Operator Framework an open source toolkit to manage Kubernetes native applications, called Operators, in an effective, automated, and scalable way.

        ##NFD-Master
        NFD-Master is the daemon responsible for communication towards the Kubernetes API. That is, it receives labeling requests from the worker and modifies node objects accordingly.

        ##NFD-Worker
        NFD-Worker is a daemon responsible for feature detection. It then communicates the information to nfd-master which does the actual node labeling. One instance of nfd-worker is supposed to be running on each node of the cluster.

        ##NFD-Topology-Updater
        NFD-Topology-Updater is a daemon responsible for examining allocated resources on a worker node to account for resources available to be allocated to new pod on a per-zone basis (where a zone can be a NUMA node). It then communicates the information to nfd-master which does the NodeResourceTopology CR creation corresponding to all the nodes in the cluster. One instance of nfd-topology-updater is supposed to be running on each node of the cluster.
      features.operators.openshift.io/cnf: "false"
      features.operators.openshift.io/cni: "false"
      features.operators.openshift.io/csi: "false"
      features.operators.openshift.io/disconnected: "true"
      features.operators.openshift.io/fips-compliant: "true"
      features.operators.openshift.io/proxy-aware: "true"
      features.operators.openshift.io/tls-profiles: "false"
      features.operators.openshift.io/token-auth-aws: "false"
      features.operators.openshift.io/token-auth-azure: "false"
      features.operators.openshift.io/token-auth-gcp: "false"
      olm.skipRange: '>=4.9.0 <4.17.0-202409100034'
      operatorframework.io/cluster-monitoring: "true"
      operatorframework.io/suggested-namespace: openshift-nfd
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Kubernetes Engine",
        "OpenShift Container Platform", "OpenShift Platform Plus"]'
      operators.operatorframework.io/builder: operator-sdk-v1.32.0
      operators.operatorframework.io/internal-objects: '["noderesourcetopologies.topology.node.k8s.io"]'
      operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
      provider: Red Hat
      repository: https://github.com/openshift/cluster-nfd-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: |
          The NodeFeatureDiscovery instance is the CustomResource being watched by the NFD-Operator, and holds all the needed information to setup the behaviour of the master and worker pods
        kind: NodeFeatureDiscovery
        name: nodefeaturediscoveries.nfd.openshift.io
        version: v1
      - kind: NodeFeatureGroup
        name: nodefeaturegroups.nfd.openshift.io
        version: v1alpha1
      - kind: NodeFeatureRule
        name: nodefeaturerules.nfd.openshift.io
        version: v1alpha1
      - kind: NodeFeature
        name: nodefeatures.nfd.openshift.io
        version: v1alpha1
      - description: |
          NodeResourceTopology resource describes node resources and their topology.
        kind: NodeResourceTopology
        name: noderesourcetopologies.topology.node.k8s.io
        version: v1alpha1
      - kind: NodeResourceTopology
        name: noderesourcetopologies.topology.node.k8s.io
        version: v1alpha2
    description: |-
      The Node Feature Discovery Operator manages the detection of hardware features and configuration in a Kubernetes cluster by labeling the nodes with hardware-specific information. The Node Feature Discovery (NFD) will label the host with node-specific attributes, like PCI cards, kernel, or OS version, and many more.

      NFD consists  of the following software components:

      The NFD Operator is based on the Operator Framework an open source toolkit to manage Kubernetes native applications, called Operators, in an effective, automated, and scalable way.

      ##NFD-Master
      NFD-Master is the daemon responsible for communication towards the Kubernetes API. That is, it receives labeling requests from the worker and modifies node objects accordingly.

      ##NFD-Worker
      NFD-Worker is a daemon responsible for feature detection. It then communicates the information to nfd-master which does the actual node labeling. One instance of nfd-worker is supposed to be running on each node of the cluster.

      ##NFD-Topology-Updater
      NFD-Topology-Updater is a daemon responsible for examining allocated resources on a worker node to account for resources available to be allocated to new pod on a per-zone basis (where a zone can be a NUMA node). It then communicates the information to nfd-master which does the NodeResourceTopology CR creation corresponding to all the nodes in the cluster. One instance of nfd-topology-updater is supposed to be running on each node of the cluster.
    displayName: Node Feature Discovery Operator
    installModes:
    - supported: true
      type: OwnNamespace
    - supported: true
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: false
      type: AllNamespaces
    keywords:
    - feature-discovery
    - feature-detection
    - node-labels
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
    links:
    - name: Node Feature Discovery Operator
      url: https://docs.openshift.com/container-platform/4.17/hardware_enablement/psap-node-feature-discovery-operator.html
    - name: Node Feature Discovery Documentation
      url: https://kubernetes-sigs.github.io/node-feature-discovery/stable/get-started/index.html
    maintainers:
    - email: support@redhat.com
      name: Red Hat Support
    maturity: stable
    minKubeVersion: 1.22.0
    provider:
      name: Red Hat
      url: https://github.com/openshift/cluster-nfd-operator
relatedImages:
- image: registry.redhat.io/openshift4/ose-cluster-nfd-operator-bundle@sha256:1247b2775eac26dbbebb21e36dd28f99eab80c79b2b590f4d1dace94a6608ae9
  name: ""
- image: registry.redhat.io/openshift4/ose-cluster-nfd-rhel9-operator@sha256:153a40b3f2f2202d8e010406a263582a17cb2ab1df4cab25b60d1b4605c07f26
  name: ose-cluster-nfd-rhel9-operator
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy-rhel9@sha256:334c6f7811e882797be1a1ed74cbb878c65d6bb6621be1544cf12f693091f9fb
  name: ose-kube-rbac-proxy-rhel9
- image: registry.redhat.io/openshift4/ose-node-feature-discovery-rhel9@sha256:4626d3729cea47c14c9d192b5630089b6d9c127faf6df89340d82061003fa574
  name: ose-node-feature-discovery-rhel9
schema: olm.bundle
---
image: registry.redhat.io/openshift4/ose-cluster-nfd-operator-bundle@sha256:94099c3f0dbfc2148f12eb68c9283a18380d1673525ee72c17f605f1affb8c94
name: nfd.4.17.0-202410011205
package: nfd
properties:
- type: olm.gvk
  value:
    group: nfd.openshift.io
    kind: NodeFeature
    version: v1alpha1
- type: olm.gvk
  value:
    group: nfd.openshift.io
    kind: NodeFeatureDiscovery
    version: v1
- type: olm.gvk
  value:
    group: nfd.openshift.io
    kind: NodeFeatureGroup
    version: v1alpha1
- type: olm.gvk
  value:
    group: nfd.openshift.io
    kind: NodeFeatureRule
    version: v1alpha1
- type: olm.gvk
  value:
    group: topology.node.k8s.io
    kind: NodeResourceTopology
    version: v1alpha1
- type: olm.gvk
  value:
    group: topology.node.k8s.io
    kind: NodeResourceTopology
    version: v1alpha2
- type: olm.package
  value:
    packageName: nfd
    version: 4.17.0-202410011205
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "nfd.openshift.io/v1",
            "kind": "NodeFeatureDiscovery",
            "metadata": {
              "name": "nfd-instance",
              "namespace": "openshift-nfd"
            },
            "spec": {
              "customConfig": {
                "configData": "#    - name: \"more.kernel.features\"\n#      matchOn:\n#      - loadedKMod: [\"example_kmod3\"]\n#    - name: \"more.features.by.nodename\"\n#      value: customValue\n#      matchOn:\n#      - nodename: [\"special-.*-node-.*\"]\n"
              },
              "operand": {
                "image": "registry.redhat.io/openshift4/ose-node-feature-discovery-rhel9@sha256:ae81d02515f748dc6638eb0727b0c33a507c75f5c8ee1a83594b48e37fd5edef",
                "imagePullPolicy": "IfNotPresent",
                "servicePort": 12000
              },
              "workerConfig": {
                "configData": "core:\n#  labelWhiteList:\n#  noPublish: false\n  sleepInterval: 60s\n#  sources: [all]\n#  klog:\n#    addDirHeader: false\n#    alsologtostderr: false\n#    logBacktraceAt:\n#    logtostderr: true\n#    skipHeaders: false\n#    stderrthreshold: 2\n#    v: 0\n#    vmodule:\n##   NOTE: the following options are not dynamically run-time \n##          configurable and require a nfd-worker restart to take effect\n##          after being changed\n#    logDir:\n#    logFile:\n#    logFileMaxSize: 1800\n#    skipLogHeaders: false\nsources:\n#  cpu:\n#    cpuid:\n##     NOTE: whitelist has priority over blacklist\n#      attributeBlacklist:\n#        - \"BMI1\"\n#        - \"BMI2\"\n#        - \"CLMUL\"\n#        - \"CMOV\"\n#        - \"CX16\"\n#        - \"ERMS\"\n#        - \"F16C\"\n#        - \"HTT\"\n#        - \"LZCNT\"\n#        - \"MMX\"\n#        - \"MMXEXT\"\n#        - \"NX\"\n#        - \"POPCNT\"\n#        - \"RDRAND\"\n#        - \"RDSEED\"\n#        - \"RDTSCP\"\n#        - \"SGX\"\n#        - \"SSE\"\n#        - \"SSE2\"\n#        - \"SSE3\"\n#        - \"SSE4.1\"\n#        - \"SSE4.2\"\n#        - \"SSSE3\"\n#      attributeWhitelist:\n#  kernel:\n#    kconfigFile: \"/path/to/kconfig\"\n#    configOpts:\n#      - \"NO_HZ\"\n#      - \"X86\"\n#      - \"DMI\"\n  pci:\n    deviceClassWhitelist:\n      - \"0200\"\n      - \"03\"\n      - \"12\"\n    deviceLabelFields:\n#      - \"class\"\n      - \"vendor\"\n#      - \"device\"\n#      - \"subsystem_vendor\"\n#      - \"subsystem_device\"\n#  usb:\n#    deviceClassWhitelist:\n#      - \"0e\"\n#      - \"ef\"\n#      - \"fe\"\n#      - \"ff\"\n#    deviceLabelFields:\n#      - \"class\"\n#      - \"vendor\"\n#      - \"device\"\n#  custom:\n#    - name: \"my.kernel.feature\"\n#      matchOn:\n#        - loadedKMod: [\"example_kmod1\", \"example_kmod2\"]\n#    - name: \"my.pci.feature\"\n#      matchOn:\n#        - pciId:\n#            class: [\"0200\"]\n#            vendor: [\"15b3\"]\n#            device: [\"1014\", \"1017\"]\n#        - pciId :\n#            vendor: [\"8086\"]\n#            device: [\"1000\", \"1100\"]\n#    - name: \"my.usb.feature\"\n#      matchOn:\n#        - usbId:\n#          class: [\"ff\"]\n#          vendor: [\"03e7\"]\n#          device: [\"2485\"]\n#        - usbId:\n#          class: [\"fe\"]\n#          vendor: [\"1a6e\"]\n#          device: [\"089a\"]\n#    - name: \"my.combined.feature\"\n#      matchOn:\n#        - pciId:\n#            vendor: [\"15b3\"]\n#            device: [\"1014\", \"1017\"]\n#          loadedKMod : [\"vendor_kmod1\", \"vendor_kmod2\"]\n"
              }
            }
          },
          {
            "apiVersion": "nfd.openshift.io/v1alpha1",
            "kind": "NodeFeatureRule",
            "metadata": {
              "name": "my-sample-rule-object"
            },
            "spec": {
              "rules": [
                {
                  "labels": {
                    "my-sample-feature": "true"
                  },
                  "matchFeatures": [
                    {
                      "feature": "kernel.loadedmodule",
                      "matchExpressions": {
                        "dummy": {
                          "op": "Exists"
                        }
                      }
                    },
                    {
                      "feature": "kernel.config",
                      "matchExpressions": {
                        "X86": {
                          "op": "In",
                          "value": [
                            "y"
                          ]
                        }
                      }
                    }
                  ],
                  "name": "my sample rule"
                }
              ]
            }
          }
        ]
      capabilities: Deep Insights
      categories: Integration & Delivery,OpenShift Optional
      containerImage: registry.redhat.io/openshift4/ose-cluster-nfd-rhel9-operator@sha256:435a5794ff39fee45ff863a493f36f962f951f9c3bde371b168f327541f3fcc0
      createdAt: "2024-07-28T08:10:39Z"
      description: |-
        The Node Feature Discovery Operator manages the detection of hardware features and configuration in a Kubernetes cluster by labeling the nodes with hardware-specific information. The Node Feature Discovery (NFD) will label the host with node-specific attributes, like PCI cards, kernel, or OS version, and many more.

        NFD consists  of the following software components:

        The NFD Operator is based on the Operator Framework an open source toolkit to manage Kubernetes native applications, called Operators, in an effective, automated, and scalable way.

        ##NFD-Master
        NFD-Master is the daemon responsible for communication towards the Kubernetes API. That is, it receives labeling requests from the worker and modifies node objects accordingly.

        ##NFD-Worker
        NFD-Worker is a daemon responsible for feature detection. It then communicates the information to nfd-master which does the actual node labeling. One instance of nfd-worker is supposed to be running on each node of the cluster.

        ##NFD-Topology-Updater
        NFD-Topology-Updater is a daemon responsible for examining allocated resources on a worker node to account for resources available to be allocated to new pod on a per-zone basis (where a zone can be a NUMA node). It then communicates the information to nfd-master which does the NodeResourceTopology CR creation corresponding to all the nodes in the cluster. One instance of nfd-topology-updater is supposed to be running on each node of the cluster.
      features.operators.openshift.io/cnf: "false"
      features.operators.openshift.io/cni: "false"
      features.operators.openshift.io/csi: "false"
      features.operators.openshift.io/disconnected: "true"
      features.operators.openshift.io/fips-compliant: "true"
      features.operators.openshift.io/proxy-aware: "true"
      features.operators.openshift.io/tls-profiles: "false"
      features.operators.openshift.io/token-auth-aws: "false"
      features.operators.openshift.io/token-auth-azure: "false"
      features.operators.openshift.io/token-auth-gcp: "false"
      olm.skipRange: '>=4.9.0 <4.17.0-202410011205'
      operatorframework.io/cluster-monitoring: "true"
      operatorframework.io/suggested-namespace: openshift-nfd
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Kubernetes Engine",
        "OpenShift Container Platform", "OpenShift Platform Plus"]'
      operators.operatorframework.io/builder: operator-sdk-v1.32.0
      operators.operatorframework.io/internal-objects: '["noderesourcetopologies.topology.node.k8s.io"]'
      operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
      provider: Red Hat
      repository: https://github.com/openshift/cluster-nfd-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: |
          The NodeFeatureDiscovery instance is the CustomResource being watched by the NFD-Operator, and holds all the needed information to setup the behaviour of the master and worker pods
        kind: NodeFeatureDiscovery
        name: nodefeaturediscoveries.nfd.openshift.io
        version: v1
      - kind: NodeFeatureGroup
        name: nodefeaturegroups.nfd.openshift.io
        version: v1alpha1
      - kind: NodeFeatureRule
        name: nodefeaturerules.nfd.openshift.io
        version: v1alpha1
      - kind: NodeFeature
        name: nodefeatures.nfd.openshift.io
        version: v1alpha1
      - description: |
          NodeResourceTopology resource describes node resources and their topology.
        kind: NodeResourceTopology
        name: noderesourcetopologies.topology.node.k8s.io
        version: v1alpha1
      - kind: NodeResourceTopology
        name: noderesourcetopologies.topology.node.k8s.io
        version: v1alpha2
    description: |-
      The Node Feature Discovery Operator manages the detection of hardware features and configuration in a Kubernetes cluster by labeling the nodes with hardware-specific information. The Node Feature Discovery (NFD) will label the host with node-specific attributes, like PCI cards, kernel, or OS version, and many more.

      NFD consists  of the following software components:

      The NFD Operator is based on the Operator Framework an open source toolkit to manage Kubernetes native applications, called Operators, in an effective, automated, and scalable way.

      ##NFD-Master
      NFD-Master is the daemon responsible for communication towards the Kubernetes API. That is, it receives labeling requests from the worker and modifies node objects accordingly.

      ##NFD-Worker
      NFD-Worker is a daemon responsible for feature detection. It then communicates the information to nfd-master which does the actual node labeling. One instance of nfd-worker is supposed to be running on each node of the cluster.

      ##NFD-Topology-Updater
      NFD-Topology-Updater is a daemon responsible for examining allocated resources on a worker node to account for resources available to be allocated to new pod on a per-zone basis (where a zone can be a NUMA node). It then communicates the information to nfd-master which does the NodeResourceTopology CR creation corresponding to all the nodes in the cluster. One instance of nfd-topology-updater is supposed to be running on each node of the cluster.
    displayName: Node Feature Discovery Operator
    installModes:
    - supported: true
      type: OwnNamespace
    - supported: true
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: false
      type: AllNamespaces
    keywords:
    - feature-discovery
    - feature-detection
    - node-labels
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
    links:
    - name: Node Feature Discovery Operator
      url: https://docs.openshift.com/container-platform/4.17/hardware_enablement/psap-node-feature-discovery-operator.html
    - name: Node Feature Discovery Documentation
      url: https://kubernetes-sigs.github.io/node-feature-discovery/stable/get-started/index.html
    maintainers:
    - email: support@redhat.com
      name: Red Hat Support
    maturity: stable
    minKubeVersion: 1.22.0
    provider:
      name: Red Hat
      url: https://github.com/openshift/cluster-nfd-operator
relatedImages:
- image: registry.redhat.io/openshift4/ose-cluster-nfd-operator-bundle@sha256:94099c3f0dbfc2148f12eb68c9283a18380d1673525ee72c17f605f1affb8c94
  name: ""
- image: registry.redhat.io/openshift4/ose-cluster-nfd-rhel9-operator@sha256:435a5794ff39fee45ff863a493f36f962f951f9c3bde371b168f327541f3fcc0
  name: ose-cluster-nfd-rhel9-operator
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy-rhel9@sha256:6fbeaf03058bb5d6e9e3311a7afe67666e0770532c978b6b57e77ea2851cb085
  name: ose-kube-rbac-proxy-rhel9
- image: registry.redhat.io/openshift4/ose-node-feature-discovery-rhel9@sha256:ae81d02515f748dc6638eb0727b0c33a507c75f5c8ee1a83594b48e37fd5edef
  name: ose-node-feature-discovery-rhel9
schema: olm.bundle
---
image: registry.redhat.io/openshift4/ose-cluster-nfd-operator-bundle@sha256:a16d31e68d17196e620c6d053e8728e32a08b1552787ae63b06de59d820975f4
name: nfd.4.17.0-202410112132
package: nfd
properties:
- type: olm.gvk
  value:
    group: nfd.openshift.io
    kind: NodeFeature
    version: v1alpha1
- type: olm.gvk
  value:
    group: nfd.openshift.io
    kind: NodeFeatureDiscovery
    version: v1
- type: olm.gvk
  value:
    group: nfd.openshift.io
    kind: NodeFeatureGroup
    version: v1alpha1
- type: olm.gvk
  value:
    group: nfd.openshift.io
    kind: NodeFeatureRule
    version: v1alpha1
- type: olm.gvk
  value:
    group: topology.node.k8s.io
    kind: NodeResourceTopology
    version: v1alpha1
- type: olm.gvk
  value:
    group: topology.node.k8s.io
    kind: NodeResourceTopology
    version: v1alpha2
- type: olm.package
  value:
    packageName: nfd
    version: 4.17.0-202410112132
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "nfd.openshift.io/v1",
            "kind": "NodeFeatureDiscovery",
            "metadata": {
              "name": "nfd-instance",
              "namespace": "openshift-nfd"
            },
            "spec": {
              "customConfig": {
                "configData": "#    - name: \"more.kernel.features\"\n#      matchOn:\n#      - loadedKMod: [\"example_kmod3\"]\n#    - name: \"more.features.by.nodename\"\n#      value: customValue\n#      matchOn:\n#      - nodename: [\"special-.*-node-.*\"]\n"
              },
              "operand": {
                "image": "registry.redhat.io/openshift4/ose-node-feature-discovery-rhel9@sha256:ae43273253e8f2c9ee01958a86c49723a3bcf806441be0c2f0b200f73dc6582a",
                "imagePullPolicy": "IfNotPresent",
                "servicePort": 12000
              },
              "workerConfig": {
                "configData": "core:\n#  labelWhiteList:\n#  noPublish: false\n  sleepInterval: 60s\n#  sources: [all]\n#  klog:\n#    addDirHeader: false\n#    alsologtostderr: false\n#    logBacktraceAt:\n#    logtostderr: true\n#    skipHeaders: false\n#    stderrthreshold: 2\n#    v: 0\n#    vmodule:\n##   NOTE: the following options are not dynamically run-time \n##          configurable and require a nfd-worker restart to take effect\n##          after being changed\n#    logDir:\n#    logFile:\n#    logFileMaxSize: 1800\n#    skipLogHeaders: false\nsources:\n#  cpu:\n#    cpuid:\n##     NOTE: whitelist has priority over blacklist\n#      attributeBlacklist:\n#        - \"BMI1\"\n#        - \"BMI2\"\n#        - \"CLMUL\"\n#        - \"CMOV\"\n#        - \"CX16\"\n#        - \"ERMS\"\n#        - \"F16C\"\n#        - \"HTT\"\n#        - \"LZCNT\"\n#        - \"MMX\"\n#        - \"MMXEXT\"\n#        - \"NX\"\n#        - \"POPCNT\"\n#        - \"RDRAND\"\n#        - \"RDSEED\"\n#        - \"RDTSCP\"\n#        - \"SGX\"\n#        - \"SSE\"\n#        - \"SSE2\"\n#        - \"SSE3\"\n#        - \"SSE4.1\"\n#        - \"SSE4.2\"\n#        - \"SSSE3\"\n#      attributeWhitelist:\n#  kernel:\n#    kconfigFile: \"/path/to/kconfig\"\n#    configOpts:\n#      - \"NO_HZ\"\n#      - \"X86\"\n#      - \"DMI\"\n  pci:\n    deviceClassWhitelist:\n      - \"0200\"\n      - \"03\"\n      - \"12\"\n    deviceLabelFields:\n#      - \"class\"\n      - \"vendor\"\n#      - \"device\"\n#      - \"subsystem_vendor\"\n#      - \"subsystem_device\"\n#  usb:\n#    deviceClassWhitelist:\n#      - \"0e\"\n#      - \"ef\"\n#      - \"fe\"\n#      - \"ff\"\n#    deviceLabelFields:\n#      - \"class\"\n#      - \"vendor\"\n#      - \"device\"\n#  custom:\n#    - name: \"my.kernel.feature\"\n#      matchOn:\n#        - loadedKMod: [\"example_kmod1\", \"example_kmod2\"]\n#    - name: \"my.pci.feature\"\n#      matchOn:\n#        - pciId:\n#            class: [\"0200\"]\n#            vendor: [\"15b3\"]\n#            device: [\"1014\", \"1017\"]\n#        - pciId :\n#            vendor: [\"8086\"]\n#            device: [\"1000\", \"1100\"]\n#    - name: \"my.usb.feature\"\n#      matchOn:\n#        - usbId:\n#          class: [\"ff\"]\n#          vendor: [\"03e7\"]\n#          device: [\"2485\"]\n#        - usbId:\n#          class: [\"fe\"]\n#          vendor: [\"1a6e\"]\n#          device: [\"089a\"]\n#    - name: \"my.combined.feature\"\n#      matchOn:\n#        - pciId:\n#            vendor: [\"15b3\"]\n#            device: [\"1014\", \"1017\"]\n#          loadedKMod : [\"vendor_kmod1\", \"vendor_kmod2\"]\n"
              }
            }
          },
          {
            "apiVersion": "nfd.openshift.io/v1alpha1",
            "kind": "NodeFeatureRule",
            "metadata": {
              "name": "my-sample-rule-object"
            },
            "spec": {
              "rules": [
                {
                  "labels": {
                    "my-sample-feature": "true"
                  },
                  "matchFeatures": [
                    {
                      "feature": "kernel.loadedmodule",
                      "matchExpressions": {
                        "dummy": {
                          "op": "Exists"
                        }
                      }
                    },
                    {
                      "feature": "kernel.config",
                      "matchExpressions": {
                        "X86": {
                          "op": "In",
                          "value": [
                            "y"
                          ]
                        }
                      }
                    }
                  ],
                  "name": "my sample rule"
                }
              ]
            }
          }
        ]
      capabilities: Deep Insights
      categories: Integration & Delivery,OpenShift Optional
      containerImage: registry.redhat.io/openshift4/ose-cluster-nfd-rhel9-operator@sha256:4495a7785e04291c294a750124d2e320cb6db9da5ea288f2777ba067d697a8f3
      createdAt: "2024-07-28T08:10:39Z"
      description: |-
        The Node Feature Discovery Operator manages the detection of hardware features and configuration in a Kubernetes cluster by labeling the nodes with hardware-specific information. The Node Feature Discovery (NFD) will label the host with node-specific attributes, like PCI cards, kernel, or OS version, and many more.

        NFD consists  of the following software components:

        The NFD Operator is based on the Operator Framework an open source toolkit to manage Kubernetes native applications, called Operators, in an effective, automated, and scalable way.

        ##NFD-Master
        NFD-Master is the daemon responsible for communication towards the Kubernetes API. That is, it receives labeling requests from the worker and modifies node objects accordingly.

        ##NFD-Worker
        NFD-Worker is a daemon responsible for feature detection. It then communicates the information to nfd-master which does the actual node labeling. One instance of nfd-worker is supposed to be running on each node of the cluster.

        ##NFD-Topology-Updater
        NFD-Topology-Updater is a daemon responsible for examining allocated resources on a worker node to account for resources available to be allocated to new pod on a per-zone basis (where a zone can be a NUMA node). It then communicates the information to nfd-master which does the NodeResourceTopology CR creation corresponding to all the nodes in the cluster. One instance of nfd-topology-updater is supposed to be running on each node of the cluster.
      features.operators.openshift.io/cnf: "false"
      features.operators.openshift.io/cni: "false"
      features.operators.openshift.io/csi: "false"
      features.operators.openshift.io/disconnected: "true"
      features.operators.openshift.io/fips-compliant: "true"
      features.operators.openshift.io/proxy-aware: "true"
      features.operators.openshift.io/tls-profiles: "false"
      features.operators.openshift.io/token-auth-aws: "false"
      features.operators.openshift.io/token-auth-azure: "false"
      features.operators.openshift.io/token-auth-gcp: "false"
      olm.skipRange: '>=4.9.0 <4.17.0-202410112132'
      operatorframework.io/cluster-monitoring: "true"
      operatorframework.io/suggested-namespace: openshift-nfd
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Kubernetes Engine",
        "OpenShift Container Platform", "OpenShift Platform Plus"]'
      operators.operatorframework.io/builder: operator-sdk-v1.32.0
      operators.operatorframework.io/internal-objects: '["noderesourcetopologies.topology.node.k8s.io"]'
      operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
      provider: Red Hat
      repository: https://github.com/openshift/cluster-nfd-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: |
          The NodeFeatureDiscovery instance is the CustomResource being watched by the NFD-Operator, and holds all the needed information to setup the behaviour of the master and worker pods
        kind: NodeFeatureDiscovery
        name: nodefeaturediscoveries.nfd.openshift.io
        version: v1
      - kind: NodeFeatureGroup
        name: nodefeaturegroups.nfd.openshift.io
        version: v1alpha1
      - kind: NodeFeatureRule
        name: nodefeaturerules.nfd.openshift.io
        version: v1alpha1
      - kind: NodeFeature
        name: nodefeatures.nfd.openshift.io
        version: v1alpha1
      - description: |
          NodeResourceTopology resource describes node resources and their topology.
        kind: NodeResourceTopology
        name: noderesourcetopologies.topology.node.k8s.io
        version: v1alpha1
      - kind: NodeResourceTopology
        name: noderesourcetopologies.topology.node.k8s.io
        version: v1alpha2
    description: |-
      The Node Feature Discovery Operator manages the detection of hardware features and configuration in a Kubernetes cluster by labeling the nodes with hardware-specific information. The Node Feature Discovery (NFD) will label the host with node-specific attributes, like PCI cards, kernel, or OS version, and many more.

      NFD consists  of the following software components:

      The NFD Operator is based on the Operator Framework an open source toolkit to manage Kubernetes native applications, called Operators, in an effective, automated, and scalable way.

      ##NFD-Master
      NFD-Master is the daemon responsible for communication towards the Kubernetes API. That is, it receives labeling requests from the worker and modifies node objects accordingly.

      ##NFD-Worker
      NFD-Worker is a daemon responsible for feature detection. It then communicates the information to nfd-master which does the actual node labeling. One instance of nfd-worker is supposed to be running on each node of the cluster.

      ##NFD-Topology-Updater
      NFD-Topology-Updater is a daemon responsible for examining allocated resources on a worker node to account for resources available to be allocated to new pod on a per-zone basis (where a zone can be a NUMA node). It then communicates the information to nfd-master which does the NodeResourceTopology CR creation corresponding to all the nodes in the cluster. One instance of nfd-topology-updater is supposed to be running on each node of the cluster.
    displayName: Node Feature Discovery Operator
    installModes:
    - supported: true
      type: OwnNamespace
    - supported: true
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: false
      type: AllNamespaces
    keywords:
    - feature-discovery
    - feature-detection
    - node-labels
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
    links:
    - name: Node Feature Discovery Operator
      url: https://docs.openshift.com/container-platform/4.17/hardware_enablement/psap-node-feature-discovery-operator.html
    - name: Node Feature Discovery Documentation
      url: https://kubernetes-sigs.github.io/node-feature-discovery/stable/get-started/index.html
    maintainers:
    - email: support@redhat.com
      name: Red Hat Support
    maturity: stable
    minKubeVersion: 1.22.0
    provider:
      name: Red Hat
      url: https://github.com/openshift/cluster-nfd-operator
relatedImages:
- image: registry.redhat.io/openshift4/ose-cluster-nfd-operator-bundle@sha256:a16d31e68d17196e620c6d053e8728e32a08b1552787ae63b06de59d820975f4
  name: ""
- image: registry.redhat.io/openshift4/ose-cluster-nfd-rhel9-operator@sha256:4495a7785e04291c294a750124d2e320cb6db9da5ea288f2777ba067d697a8f3
  name: ose-cluster-nfd-rhel9-operator
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy-rhel9@sha256:99a3b38ad971d2220e6ab67ebead14f2e988bf22c85792b50ffbc9f23325e417
  name: ose-kube-rbac-proxy-rhel9
- image: registry.redhat.io/openshift4/ose-node-feature-discovery-rhel9@sha256:ae43273253e8f2c9ee01958a86c49723a3bcf806441be0c2f0b200f73dc6582a
  name: ose-node-feature-discovery-rhel9
schema: olm.bundle
---
image: registry.redhat.io/openshift4/ose-cluster-nfd-operator-bundle@sha256:4bc749f6ac102e839f003dd388da8acb6997220f8b6d678e6c71ce4abae6b61f
name: nfd.4.17.0-202410211206
package: nfd
properties:
- type: olm.gvk
  value:
    group: nfd.openshift.io
    kind: NodeFeature
    version: v1alpha1
- type: olm.gvk
  value:
    group: nfd.openshift.io
    kind: NodeFeatureDiscovery
    version: v1
- type: olm.gvk
  value:
    group: nfd.openshift.io
    kind: NodeFeatureGroup
    version: v1alpha1
- type: olm.gvk
  value:
    group: nfd.openshift.io
    kind: NodeFeatureRule
    version: v1alpha1
- type: olm.gvk
  value:
    group: topology.node.k8s.io
    kind: NodeResourceTopology
    version: v1alpha1
- type: olm.gvk
  value:
    group: topology.node.k8s.io
    kind: NodeResourceTopology
    version: v1alpha2
- type: olm.package
  value:
    packageName: nfd
    version: 4.17.0-202410211206
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "nfd.openshift.io/v1",
            "kind": "NodeFeatureDiscovery",
            "metadata": {
              "name": "nfd-instance",
              "namespace": "openshift-nfd"
            },
            "spec": {
              "customConfig": {
                "configData": "#    - name: \"more.kernel.features\"\n#      matchOn:\n#      - loadedKMod: [\"example_kmod3\"]\n#    - name: \"more.features.by.nodename\"\n#      value: customValue\n#      matchOn:\n#      - nodename: [\"special-.*-node-.*\"]\n"
              },
              "operand": {
                "image": "registry.redhat.io/openshift4/ose-node-feature-discovery-rhel9@sha256:ae43273253e8f2c9ee01958a86c49723a3bcf806441be0c2f0b200f73dc6582a",
                "imagePullPolicy": "IfNotPresent",
                "servicePort": 12000
              },
              "workerConfig": {
                "configData": "core:\n#  labelWhiteList:\n#  noPublish: false\n  sleepInterval: 60s\n#  sources: [all]\n#  klog:\n#    addDirHeader: false\n#    alsologtostderr: false\n#    logBacktraceAt:\n#    logtostderr: true\n#    skipHeaders: false\n#    stderrthreshold: 2\n#    v: 0\n#    vmodule:\n##   NOTE: the following options are not dynamically run-time \n##          configurable and require a nfd-worker restart to take effect\n##          after being changed\n#    logDir:\n#    logFile:\n#    logFileMaxSize: 1800\n#    skipLogHeaders: false\nsources:\n#  cpu:\n#    cpuid:\n##     NOTE: whitelist has priority over blacklist\n#      attributeBlacklist:\n#        - \"BMI1\"\n#        - \"BMI2\"\n#        - \"CLMUL\"\n#        - \"CMOV\"\n#        - \"CX16\"\n#        - \"ERMS\"\n#        - \"F16C\"\n#        - \"HTT\"\n#        - \"LZCNT\"\n#        - \"MMX\"\n#        - \"MMXEXT\"\n#        - \"NX\"\n#        - \"POPCNT\"\n#        - \"RDRAND\"\n#        - \"RDSEED\"\n#        - \"RDTSCP\"\n#        - \"SGX\"\n#        - \"SSE\"\n#        - \"SSE2\"\n#        - \"SSE3\"\n#        - \"SSE4.1\"\n#        - \"SSE4.2\"\n#        - \"SSSE3\"\n#      attributeWhitelist:\n#  kernel:\n#    kconfigFile: \"/path/to/kconfig\"\n#    configOpts:\n#      - \"NO_HZ\"\n#      - \"X86\"\n#      - \"DMI\"\n  pci:\n    deviceClassWhitelist:\n      - \"0200\"\n      - \"03\"\n      - \"12\"\n    deviceLabelFields:\n#      - \"class\"\n      - \"vendor\"\n#      - \"device\"\n#      - \"subsystem_vendor\"\n#      - \"subsystem_device\"\n#  usb:\n#    deviceClassWhitelist:\n#      - \"0e\"\n#      - \"ef\"\n#      - \"fe\"\n#      - \"ff\"\n#    deviceLabelFields:\n#      - \"class\"\n#      - \"vendor\"\n#      - \"device\"\n#  custom:\n#    - name: \"my.kernel.feature\"\n#      matchOn:\n#        - loadedKMod: [\"example_kmod1\", \"example_kmod2\"]\n#    - name: \"my.pci.feature\"\n#      matchOn:\n#        - pciId:\n#            class: [\"0200\"]\n#            vendor: [\"15b3\"]\n#            device: [\"1014\", \"1017\"]\n#        - pciId :\n#            vendor: [\"8086\"]\n#            device: [\"1000\", \"1100\"]\n#    - name: \"my.usb.feature\"\n#      matchOn:\n#        - usbId:\n#          class: [\"ff\"]\n#          vendor: [\"03e7\"]\n#          device: [\"2485\"]\n#        - usbId:\n#          class: [\"fe\"]\n#          vendor: [\"1a6e\"]\n#          device: [\"089a\"]\n#    - name: \"my.combined.feature\"\n#      matchOn:\n#        - pciId:\n#            vendor: [\"15b3\"]\n#            device: [\"1014\", \"1017\"]\n#          loadedKMod : [\"vendor_kmod1\", \"vendor_kmod2\"]\n"
              }
            }
          },
          {
            "apiVersion": "nfd.openshift.io/v1alpha1",
            "kind": "NodeFeatureRule",
            "metadata": {
              "name": "my-sample-rule-object"
            },
            "spec": {
              "rules": [
                {
                  "labels": {
                    "my-sample-feature": "true"
                  },
                  "matchFeatures": [
                    {
                      "feature": "kernel.loadedmodule",
                      "matchExpressions": {
                        "dummy": {
                          "op": "Exists"
                        }
                      }
                    },
                    {
                      "feature": "kernel.config",
                      "matchExpressions": {
                        "X86": {
                          "op": "In",
                          "value": [
                            "y"
                          ]
                        }
                      }
                    }
                  ],
                  "name": "my sample rule"
                }
              ]
            }
          }
        ]
      capabilities: Deep Insights
      categories: Integration & Delivery,OpenShift Optional
      containerImage: registry.redhat.io/openshift4/ose-cluster-nfd-rhel9-operator@sha256:56a671bbd4ffa2d559602e6d0b0b7534b6e1458078817e49ef02fd4ae2681d3a
      createdAt: "2024-07-28T08:10:39Z"
      description: |-
        The Node Feature Discovery Operator manages the detection of hardware features and configuration in a Kubernetes cluster by labeling the nodes with hardware-specific information. The Node Feature Discovery (NFD) will label the host with node-specific attributes, like PCI cards, kernel, or OS version, and many more.

        NFD consists  of the following software components:

        The NFD Operator is based on the Operator Framework an open source toolkit to manage Kubernetes native applications, called Operators, in an effective, automated, and scalable way.

        ##NFD-Master
        NFD-Master is the daemon responsible for communication towards the Kubernetes API. That is, it receives labeling requests from the worker and modifies node objects accordingly.

        ##NFD-Worker
        NFD-Worker is a daemon responsible for feature detection. It then communicates the information to nfd-master which does the actual node labeling. One instance of nfd-worker is supposed to be running on each node of the cluster.

        ##NFD-Topology-Updater
        NFD-Topology-Updater is a daemon responsible for examining allocated resources on a worker node to account for resources available to be allocated to new pod on a per-zone basis (where a zone can be a NUMA node). It then communicates the information to nfd-master which does the NodeResourceTopology CR creation corresponding to all the nodes in the cluster. One instance of nfd-topology-updater is supposed to be running on each node of the cluster.
      features.operators.openshift.io/cnf: "false"
      features.operators.openshift.io/cni: "false"
      features.operators.openshift.io/csi: "false"
      features.operators.openshift.io/disconnected: "true"
      features.operators.openshift.io/fips-compliant: "true"
      features.operators.openshift.io/proxy-aware: "true"
      features.operators.openshift.io/tls-profiles: "false"
      features.operators.openshift.io/token-auth-aws: "false"
      features.operators.openshift.io/token-auth-azure: "false"
      features.operators.openshift.io/token-auth-gcp: "false"
      olm.skipRange: '>=4.9.0 <4.17.0-202410211206'
      operatorframework.io/cluster-monitoring: "true"
      operatorframework.io/suggested-namespace: openshift-nfd
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Kubernetes Engine",
        "OpenShift Container Platform", "OpenShift Platform Plus"]'
      operators.operatorframework.io/builder: operator-sdk-v1.32.0
      operators.operatorframework.io/internal-objects: '["noderesourcetopologies.topology.node.k8s.io"]'
      operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
      provider: Red Hat
      repository: https://github.com/openshift/cluster-nfd-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: |
          The NodeFeatureDiscovery instance is the CustomResource being watched by the NFD-Operator, and holds all the needed information to setup the behaviour of the master and worker pods
        kind: NodeFeatureDiscovery
        name: nodefeaturediscoveries.nfd.openshift.io
        version: v1
      - kind: NodeFeatureGroup
        name: nodefeaturegroups.nfd.openshift.io
        version: v1alpha1
      - kind: NodeFeatureRule
        name: nodefeaturerules.nfd.openshift.io
        version: v1alpha1
      - kind: NodeFeature
        name: nodefeatures.nfd.openshift.io
        version: v1alpha1
      - description: |
          NodeResourceTopology resource describes node resources and their topology.
        kind: NodeResourceTopology
        name: noderesourcetopologies.topology.node.k8s.io
        version: v1alpha1
      - kind: NodeResourceTopology
        name: noderesourcetopologies.topology.node.k8s.io
        version: v1alpha2
    description: |-
      The Node Feature Discovery Operator manages the detection of hardware features and configuration in a Kubernetes cluster by labeling the nodes with hardware-specific information. The Node Feature Discovery (NFD) will label the host with node-specific attributes, like PCI cards, kernel, or OS version, and many more.

      NFD consists  of the following software components:

      The NFD Operator is based on the Operator Framework an open source toolkit to manage Kubernetes native applications, called Operators, in an effective, automated, and scalable way.

      ##NFD-Master
      NFD-Master is the daemon responsible for communication towards the Kubernetes API. That is, it receives labeling requests from the worker and modifies node objects accordingly.

      ##NFD-Worker
      NFD-Worker is a daemon responsible for feature detection. It then communicates the information to nfd-master which does the actual node labeling. One instance of nfd-worker is supposed to be running on each node of the cluster.

      ##NFD-Topology-Updater
      NFD-Topology-Updater is a daemon responsible for examining allocated resources on a worker node to account for resources available to be allocated to new pod on a per-zone basis (where a zone can be a NUMA node). It then communicates the information to nfd-master which does the NodeResourceTopology CR creation corresponding to all the nodes in the cluster. One instance of nfd-topology-updater is supposed to be running on each node of the cluster.
    displayName: Node Feature Discovery Operator
    installModes:
    - supported: true
      type: OwnNamespace
    - supported: true
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: false
      type: AllNamespaces
    keywords:
    - feature-discovery
    - feature-detection
    - node-labels
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
    links:
    - name: Node Feature Discovery Operator
      url: https://docs.openshift.com/container-platform/4.17/hardware_enablement/psap-node-feature-discovery-operator.html
    - name: Node Feature Discovery Documentation
      url: https://kubernetes-sigs.github.io/node-feature-discovery/stable/get-started/index.html
    maintainers:
    - email: support@redhat.com
      name: Red Hat Support
    maturity: stable
    minKubeVersion: 1.22.0
    provider:
      name: Red Hat
      url: https://github.com/openshift/cluster-nfd-operator
relatedImages:
- image: registry.redhat.io/openshift4/ose-cluster-nfd-operator-bundle@sha256:4bc749f6ac102e839f003dd388da8acb6997220f8b6d678e6c71ce4abae6b61f
  name: ""
- image: registry.redhat.io/openshift4/ose-cluster-nfd-rhel9-operator@sha256:56a671bbd4ffa2d559602e6d0b0b7534b6e1458078817e49ef02fd4ae2681d3a
  name: ose-cluster-nfd-rhel9-operator
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy-rhel9@sha256:42be2d5bb4d09f4fa31602f8521af07b0c1f27f47379d1529b769bc7bd61abc9
  name: ose-kube-rbac-proxy-rhel9
- image: registry.redhat.io/openshift4/ose-node-feature-discovery-rhel9@sha256:ae43273253e8f2c9ee01958a86c49723a3bcf806441be0c2f0b200f73dc6582a
  name: ose-node-feature-discovery-rhel9
schema: olm.bundle
---
image: registry.redhat.io/openshift4/ose-cluster-nfd-operator-bundle@sha256:b71ffc6b61691faad73483d2973824e902e13118ecd7106d00148d24d6d4a029
name: nfd.4.17.0-202410241236
package: nfd
properties:
- type: olm.gvk
  value:
    group: nfd.openshift.io
    kind: NodeFeature
    version: v1alpha1
- type: olm.gvk
  value:
    group: nfd.openshift.io
    kind: NodeFeatureDiscovery
    version: v1
- type: olm.gvk
  value:
    group: nfd.openshift.io
    kind: NodeFeatureGroup
    version: v1alpha1
- type: olm.gvk
  value:
    group: nfd.openshift.io
    kind: NodeFeatureRule
    version: v1alpha1
- type: olm.gvk
  value:
    group: topology.node.k8s.io
    kind: NodeResourceTopology
    version: v1alpha1
- type: olm.gvk
  value:
    group: topology.node.k8s.io
    kind: NodeResourceTopology
    version: v1alpha2
- type: olm.package
  value:
    packageName: nfd
    version: 4.17.0-202410241236
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "nfd.openshift.io/v1",
            "kind": "NodeFeatureDiscovery",
            "metadata": {
              "name": "nfd-instance",
              "namespace": "openshift-nfd"
            },
            "spec": {
              "customConfig": {
                "configData": "#    - name: \"more.kernel.features\"\n#      matchOn:\n#      - loadedKMod: [\"example_kmod3\"]\n#    - name: \"more.features.by.nodename\"\n#      value: customValue\n#      matchOn:\n#      - nodename: [\"special-.*-node-.*\"]\n"
              },
              "operand": {
                "image": "registry.redhat.io/openshift4/ose-node-feature-discovery-rhel9@sha256:b0f786e21798c27905c6fdf189bd91cae1f5ddd58ad101a28dbb8b5de92069ce",
                "imagePullPolicy": "IfNotPresent",
                "servicePort": 12000
              },
              "workerConfig": {
                "configData": "core:\n#  labelWhiteList:\n#  noPublish: false\n  sleepInterval: 60s\n#  sources: [all]\n#  klog:\n#    addDirHeader: false\n#    alsologtostderr: false\n#    logBacktraceAt:\n#    logtostderr: true\n#    skipHeaders: false\n#    stderrthreshold: 2\n#    v: 0\n#    vmodule:\n##   NOTE: the following options are not dynamically run-time \n##          configurable and require a nfd-worker restart to take effect\n##          after being changed\n#    logDir:\n#    logFile:\n#    logFileMaxSize: 1800\n#    skipLogHeaders: false\nsources:\n#  cpu:\n#    cpuid:\n##     NOTE: whitelist has priority over blacklist\n#      attributeBlacklist:\n#        - \"BMI1\"\n#        - \"BMI2\"\n#        - \"CLMUL\"\n#        - \"CMOV\"\n#        - \"CX16\"\n#        - \"ERMS\"\n#        - \"F16C\"\n#        - \"HTT\"\n#        - \"LZCNT\"\n#        - \"MMX\"\n#        - \"MMXEXT\"\n#        - \"NX\"\n#        - \"POPCNT\"\n#        - \"RDRAND\"\n#        - \"RDSEED\"\n#        - \"RDTSCP\"\n#        - \"SGX\"\n#        - \"SSE\"\n#        - \"SSE2\"\n#        - \"SSE3\"\n#        - \"SSE4.1\"\n#        - \"SSE4.2\"\n#        - \"SSSE3\"\n#      attributeWhitelist:\n#  kernel:\n#    kconfigFile: \"/path/to/kconfig\"\n#    configOpts:\n#      - \"NO_HZ\"\n#      - \"X86\"\n#      - \"DMI\"\n  pci:\n    deviceClassWhitelist:\n      - \"0200\"\n      - \"03\"\n      - \"12\"\n    deviceLabelFields:\n#      - \"class\"\n      - \"vendor\"\n#      - \"device\"\n#      - \"subsystem_vendor\"\n#      - \"subsystem_device\"\n#  usb:\n#    deviceClassWhitelist:\n#      - \"0e\"\n#      - \"ef\"\n#      - \"fe\"\n#      - \"ff\"\n#    deviceLabelFields:\n#      - \"class\"\n#      - \"vendor\"\n#      - \"device\"\n#  custom:\n#    - name: \"my.kernel.feature\"\n#      matchOn:\n#        - loadedKMod: [\"example_kmod1\", \"example_kmod2\"]\n#    - name: \"my.pci.feature\"\n#      matchOn:\n#        - pciId:\n#            class: [\"0200\"]\n#            vendor: [\"15b3\"]\n#            device: [\"1014\", \"1017\"]\n#        - pciId :\n#            vendor: [\"8086\"]\n#            device: [\"1000\", \"1100\"]\n#    - name: \"my.usb.feature\"\n#      matchOn:\n#        - usbId:\n#          class: [\"ff\"]\n#          vendor: [\"03e7\"]\n#          device: [\"2485\"]\n#        - usbId:\n#          class: [\"fe\"]\n#          vendor: [\"1a6e\"]\n#          device: [\"089a\"]\n#    - name: \"my.combined.feature\"\n#      matchOn:\n#        - pciId:\n#            vendor: [\"15b3\"]\n#            device: [\"1014\", \"1017\"]\n#          loadedKMod : [\"vendor_kmod1\", \"vendor_kmod2\"]\n"
              }
            }
          },
          {
            "apiVersion": "nfd.openshift.io/v1alpha1",
            "kind": "NodeFeatureRule",
            "metadata": {
              "name": "my-sample-rule-object"
            },
            "spec": {
              "rules": [
                {
                  "labels": {
                    "my-sample-feature": "true"
                  },
                  "matchFeatures": [
                    {
                      "feature": "kernel.loadedmodule",
                      "matchExpressions": {
                        "dummy": {
                          "op": "Exists"
                        }
                      }
                    },
                    {
                      "feature": "kernel.config",
                      "matchExpressions": {
                        "X86": {
                          "op": "In",
                          "value": [
                            "y"
                          ]
                        }
                      }
                    }
                  ],
                  "name": "my sample rule"
                }
              ]
            }
          }
        ]
      capabilities: Deep Insights
      categories: Integration & Delivery,OpenShift Optional
      containerImage: registry.redhat.io/openshift4/ose-cluster-nfd-rhel9-operator@sha256:34526d92a27f251ccabb5dc7c38a031ae9e3d9afb06920f40937fc30dfac8da9
      createdAt: "2024-07-28T08:10:39Z"
      description: |-
        The Node Feature Discovery Operator manages the detection of hardware features and configuration in a Kubernetes cluster by labeling the nodes with hardware-specific information. The Node Feature Discovery (NFD) will label the host with node-specific attributes, like PCI cards, kernel, or OS version, and many more.

        NFD consists  of the following software components:

        The NFD Operator is based on the Operator Framework an open source toolkit to manage Kubernetes native applications, called Operators, in an effective, automated, and scalable way.

        ##NFD-Master
        NFD-Master is the daemon responsible for communication towards the Kubernetes API. That is, it receives labeling requests from the worker and modifies node objects accordingly.

        ##NFD-Worker
        NFD-Worker is a daemon responsible for feature detection. It then communicates the information to nfd-master which does the actual node labeling. One instance of nfd-worker is supposed to be running on each node of the cluster.

        ##NFD-Topology-Updater
        NFD-Topology-Updater is a daemon responsible for examining allocated resources on a worker node to account for resources available to be allocated to new pod on a per-zone basis (where a zone can be a NUMA node). It then communicates the information to nfd-master which does the NodeResourceTopology CR creation corresponding to all the nodes in the cluster. One instance of nfd-topology-updater is supposed to be running on each node of the cluster.
      features.operators.openshift.io/cnf: "false"
      features.operators.openshift.io/cni: "false"
      features.operators.openshift.io/csi: "false"
      features.operators.openshift.io/disconnected: "true"
      features.operators.openshift.io/fips-compliant: "true"
      features.operators.openshift.io/proxy-aware: "true"
      features.operators.openshift.io/tls-profiles: "false"
      features.operators.openshift.io/token-auth-aws: "false"
      features.operators.openshift.io/token-auth-azure: "false"
      features.operators.openshift.io/token-auth-gcp: "false"
      olm.skipRange: '>=4.9.0 <4.17.0-202410241236'
      operatorframework.io/cluster-monitoring: "true"
      operatorframework.io/suggested-namespace: openshift-nfd
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Kubernetes Engine",
        "OpenShift Container Platform", "OpenShift Platform Plus"]'
      operators.operatorframework.io/builder: operator-sdk-v1.32.0
      operators.operatorframework.io/internal-objects: '["noderesourcetopologies.topology.node.k8s.io"]'
      operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
      provider: Red Hat
      repository: https://github.com/openshift/cluster-nfd-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: |
          The NodeFeatureDiscovery instance is the CustomResource being watched by the NFD-Operator, and holds all the needed information to setup the behaviour of the master and worker pods
        kind: NodeFeatureDiscovery
        name: nodefeaturediscoveries.nfd.openshift.io
        version: v1
      - kind: NodeFeatureGroup
        name: nodefeaturegroups.nfd.openshift.io
        version: v1alpha1
      - kind: NodeFeatureRule
        name: nodefeaturerules.nfd.openshift.io
        version: v1alpha1
      - kind: NodeFeature
        name: nodefeatures.nfd.openshift.io
        version: v1alpha1
      - description: |
          NodeResourceTopology resource describes node resources and their topology.
        kind: NodeResourceTopology
        name: noderesourcetopologies.topology.node.k8s.io
        version: v1alpha1
      - kind: NodeResourceTopology
        name: noderesourcetopologies.topology.node.k8s.io
        version: v1alpha2
    description: |-
      The Node Feature Discovery Operator manages the detection of hardware features and configuration in a Kubernetes cluster by labeling the nodes with hardware-specific information. The Node Feature Discovery (NFD) will label the host with node-specific attributes, like PCI cards, kernel, or OS version, and many more.

      NFD consists  of the following software components:

      The NFD Operator is based on the Operator Framework an open source toolkit to manage Kubernetes native applications, called Operators, in an effective, automated, and scalable way.

      ##NFD-Master
      NFD-Master is the daemon responsible for communication towards the Kubernetes API. That is, it receives labeling requests from the worker and modifies node objects accordingly.

      ##NFD-Worker
      NFD-Worker is a daemon responsible for feature detection. It then communicates the information to nfd-master which does the actual node labeling. One instance of nfd-worker is supposed to be running on each node of the cluster.

      ##NFD-Topology-Updater
      NFD-Topology-Updater is a daemon responsible for examining allocated resources on a worker node to account for resources available to be allocated to new pod on a per-zone basis (where a zone can be a NUMA node). It then communicates the information to nfd-master which does the NodeResourceTopology CR creation corresponding to all the nodes in the cluster. One instance of nfd-topology-updater is supposed to be running on each node of the cluster.
    displayName: Node Feature Discovery Operator
    installModes:
    - supported: true
      type: OwnNamespace
    - supported: true
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: false
      type: AllNamespaces
    keywords:
    - feature-discovery
    - feature-detection
    - node-labels
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
    links:
    - name: Node Feature Discovery Operator
      url: https://docs.openshift.com/container-platform/4.17/hardware_enablement/psap-node-feature-discovery-operator.html
    - name: Node Feature Discovery Documentation
      url: https://kubernetes-sigs.github.io/node-feature-discovery/stable/get-started/index.html
    maintainers:
    - email: support@redhat.com
      name: Red Hat Support
    maturity: stable
    minKubeVersion: 1.22.0
    provider:
      name: Red Hat
      url: https://github.com/openshift/cluster-nfd-operator
relatedImages:
- image: registry.redhat.io/openshift4/ose-cluster-nfd-operator-bundle@sha256:b71ffc6b61691faad73483d2973824e902e13118ecd7106d00148d24d6d4a029
  name: ""
- image: registry.redhat.io/openshift4/ose-cluster-nfd-rhel9-operator@sha256:34526d92a27f251ccabb5dc7c38a031ae9e3d9afb06920f40937fc30dfac8da9
  name: ose-cluster-nfd-rhel9-operator
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy-rhel9@sha256:3fa22124916523b958c67af8ad652e73a2c3d68bb5579da1cba1ade537f3b7ae
  name: ose-kube-rbac-proxy-rhel9
- image: registry.redhat.io/openshift4/ose-node-feature-discovery-rhel9@sha256:b0f786e21798c27905c6fdf189bd91cae1f5ddd58ad101a28dbb8b5de92069ce
  name: ose-node-feature-discovery-rhel9
schema: olm.bundle
---
image: registry.redhat.io/openshift4/ose-cluster-nfd-operator-bundle@sha256:e5c027d746a8c23f629551ada2840bbea5d3bdfa2b246e8eff376e21682b6478
name: nfd.4.17.0-202411121637
package: nfd
properties:
- type: olm.gvk
  value:
    group: nfd.openshift.io
    kind: NodeFeature
    version: v1alpha1
- type: olm.gvk
  value:
    group: nfd.openshift.io
    kind: NodeFeatureDiscovery
    version: v1
- type: olm.gvk
  value:
    group: nfd.openshift.io
    kind: NodeFeatureGroup
    version: v1alpha1
- type: olm.gvk
  value:
    group: nfd.openshift.io
    kind: NodeFeatureRule
    version: v1alpha1
- type: olm.gvk
  value:
    group: topology.node.k8s.io
    kind: NodeResourceTopology
    version: v1alpha1
- type: olm.gvk
  value:
    group: topology.node.k8s.io
    kind: NodeResourceTopology
    version: v1alpha2
- type: olm.package
  value:
    packageName: nfd
    version: 4.17.0-202411121637
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "nfd.openshift.io/v1",
            "kind": "NodeFeatureDiscovery",
            "metadata": {
              "name": "nfd-instance",
              "namespace": "openshift-nfd"
            },
            "spec": {
              "customConfig": {
                "configData": "#    - name: \"more.kernel.features\"\n#      matchOn:\n#      - loadedKMod: [\"example_kmod3\"]\n#    - name: \"more.features.by.nodename\"\n#      value: customValue\n#      matchOn:\n#      - nodename: [\"special-.*-node-.*\"]\n"
              },
              "operand": {
                "image": "registry.redhat.io/openshift4/ose-node-feature-discovery-rhel9@sha256:b0f786e21798c27905c6fdf189bd91cae1f5ddd58ad101a28dbb8b5de92069ce",
                "imagePullPolicy": "IfNotPresent",
                "servicePort": 12000
              },
              "workerConfig": {
                "configData": "core:\n#  labelWhiteList:\n#  noPublish: false\n  sleepInterval: 60s\n#  sources: [all]\n#  klog:\n#    addDirHeader: false\n#    alsologtostderr: false\n#    logBacktraceAt:\n#    logtostderr: true\n#    skipHeaders: false\n#    stderrthreshold: 2\n#    v: 0\n#    vmodule:\n##   NOTE: the following options are not dynamically run-time \n##          configurable and require a nfd-worker restart to take effect\n##          after being changed\n#    logDir:\n#    logFile:\n#    logFileMaxSize: 1800\n#    skipLogHeaders: false\nsources:\n#  cpu:\n#    cpuid:\n##     NOTE: whitelist has priority over blacklist\n#      attributeBlacklist:\n#        - \"BMI1\"\n#        - \"BMI2\"\n#        - \"CLMUL\"\n#        - \"CMOV\"\n#        - \"CX16\"\n#        - \"ERMS\"\n#        - \"F16C\"\n#        - \"HTT\"\n#        - \"LZCNT\"\n#        - \"MMX\"\n#        - \"MMXEXT\"\n#        - \"NX\"\n#        - \"POPCNT\"\n#        - \"RDRAND\"\n#        - \"RDSEED\"\n#        - \"RDTSCP\"\n#        - \"SGX\"\n#        - \"SSE\"\n#        - \"SSE2\"\n#        - \"SSE3\"\n#        - \"SSE4.1\"\n#        - \"SSE4.2\"\n#        - \"SSSE3\"\n#      attributeWhitelist:\n#  kernel:\n#    kconfigFile: \"/path/to/kconfig\"\n#    configOpts:\n#      - \"NO_HZ\"\n#      - \"X86\"\n#      - \"DMI\"\n  pci:\n    deviceClassWhitelist:\n      - \"0200\"\n      - \"03\"\n      - \"12\"\n    deviceLabelFields:\n#      - \"class\"\n      - \"vendor\"\n#      - \"device\"\n#      - \"subsystem_vendor\"\n#      - \"subsystem_device\"\n#  usb:\n#    deviceClassWhitelist:\n#      - \"0e\"\n#      - \"ef\"\n#      - \"fe\"\n#      - \"ff\"\n#    deviceLabelFields:\n#      - \"class\"\n#      - \"vendor\"\n#      - \"device\"\n#  custom:\n#    - name: \"my.kernel.feature\"\n#      matchOn:\n#        - loadedKMod: [\"example_kmod1\", \"example_kmod2\"]\n#    - name: \"my.pci.feature\"\n#      matchOn:\n#        - pciId:\n#            class: [\"0200\"]\n#            vendor: [\"15b3\"]\n#            device: [\"1014\", \"1017\"]\n#        - pciId :\n#            vendor: [\"8086\"]\n#            device: [\"1000\", \"1100\"]\n#    - name: \"my.usb.feature\"\n#      matchOn:\n#        - usbId:\n#          class: [\"ff\"]\n#          vendor: [\"03e7\"]\n#          device: [\"2485\"]\n#        - usbId:\n#          class: [\"fe\"]\n#          vendor: [\"1a6e\"]\n#          device: [\"089a\"]\n#    - name: \"my.combined.feature\"\n#      matchOn:\n#        - pciId:\n#            vendor: [\"15b3\"]\n#            device: [\"1014\", \"1017\"]\n#          loadedKMod : [\"vendor_kmod1\", \"vendor_kmod2\"]\n"
              }
            }
          },
          {
            "apiVersion": "nfd.openshift.io/v1alpha1",
            "kind": "NodeFeatureRule",
            "metadata": {
              "name": "my-sample-rule-object"
            },
            "spec": {
              "rules": [
                {
                  "labels": {
                    "my-sample-feature": "true"
                  },
                  "matchFeatures": [
                    {
                      "feature": "kernel.loadedmodule",
                      "matchExpressions": {
                        "dummy": {
                          "op": "Exists"
                        }
                      }
                    },
                    {
                      "feature": "kernel.config",
                      "matchExpressions": {
                        "X86": {
                          "op": "In",
                          "value": [
                            "y"
                          ]
                        }
                      }
                    }
                  ],
                  "name": "my sample rule"
                }
              ]
            }
          }
        ]
      capabilities: Deep Insights
      categories: Integration & Delivery,OpenShift Optional
      containerImage: registry.redhat.io/openshift4/ose-cluster-nfd-rhel9-operator@sha256:de929b45521a7c4098e2f434b063da23c73a19be51dffc0a614fb60047f18211
      createdAt: "2024-07-28T08:10:39Z"
      description: |-
        The Node Feature Discovery Operator manages the detection of hardware features and configuration in a Kubernetes cluster by labeling the nodes with hardware-specific information. The Node Feature Discovery (NFD) will label the host with node-specific attributes, like PCI cards, kernel, or OS version, and many more.

        NFD consists  of the following software components:

        The NFD Operator is based on the Operator Framework an open source toolkit to manage Kubernetes native applications, called Operators, in an effective, automated, and scalable way.

        ##NFD-Master
        NFD-Master is the daemon responsible for communication towards the Kubernetes API. That is, it receives labeling requests from the worker and modifies node objects accordingly.

        ##NFD-Worker
        NFD-Worker is a daemon responsible for feature detection. It then communicates the information to nfd-master which does the actual node labeling. One instance of nfd-worker is supposed to be running on each node of the cluster.

        ##NFD-Topology-Updater
        NFD-Topology-Updater is a daemon responsible for examining allocated resources on a worker node to account for resources available to be allocated to new pod on a per-zone basis (where a zone can be a NUMA node). It then communicates the information to nfd-master which does the NodeResourceTopology CR creation corresponding to all the nodes in the cluster. One instance of nfd-topology-updater is supposed to be running on each node of the cluster.
      features.operators.openshift.io/cnf: "false"
      features.operators.openshift.io/cni: "false"
      features.operators.openshift.io/csi: "false"
      features.operators.openshift.io/disconnected: "true"
      features.operators.openshift.io/fips-compliant: "true"
      features.operators.openshift.io/proxy-aware: "true"
      features.operators.openshift.io/tls-profiles: "false"
      features.operators.openshift.io/token-auth-aws: "false"
      features.operators.openshift.io/token-auth-azure: "false"
      features.operators.openshift.io/token-auth-gcp: "false"
      olm.skipRange: '>=4.9.0 <4.17.0-202411121637'
      operatorframework.io/cluster-monitoring: "true"
      operatorframework.io/suggested-namespace: openshift-nfd
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Kubernetes Engine",
        "OpenShift Container Platform", "OpenShift Platform Plus"]'
      operators.operatorframework.io/builder: operator-sdk-v1.32.0
      operators.operatorframework.io/internal-objects: '["noderesourcetopologies.topology.node.k8s.io"]'
      operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
      provider: Red Hat
      repository: https://github.com/openshift/cluster-nfd-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: |
          The NodeFeatureDiscovery instance is the CustomResource being watched by the NFD-Operator, and holds all the needed information to setup the behaviour of the master and worker pods
        kind: NodeFeatureDiscovery
        name: nodefeaturediscoveries.nfd.openshift.io
        version: v1
      - kind: NodeFeatureGroup
        name: nodefeaturegroups.nfd.openshift.io
        version: v1alpha1
      - kind: NodeFeatureRule
        name: nodefeaturerules.nfd.openshift.io
        version: v1alpha1
      - kind: NodeFeature
        name: nodefeatures.nfd.openshift.io
        version: v1alpha1
      - description: |
          NodeResourceTopology resource describes node resources and their topology.
        kind: NodeResourceTopology
        name: noderesourcetopologies.topology.node.k8s.io
        version: v1alpha1
      - kind: NodeResourceTopology
        name: noderesourcetopologies.topology.node.k8s.io
        version: v1alpha2
    description: |-
      The Node Feature Discovery Operator manages the detection of hardware features and configuration in a Kubernetes cluster by labeling the nodes with hardware-specific information. The Node Feature Discovery (NFD) will label the host with node-specific attributes, like PCI cards, kernel, or OS version, and many more.

      NFD consists  of the following software components:

      The NFD Operator is based on the Operator Framework an open source toolkit to manage Kubernetes native applications, called Operators, in an effective, automated, and scalable way.

      ##NFD-Master
      NFD-Master is the daemon responsible for communication towards the Kubernetes API. That is, it receives labeling requests from the worker and modifies node objects accordingly.

      ##NFD-Worker
      NFD-Worker is a daemon responsible for feature detection. It then communicates the information to nfd-master which does the actual node labeling. One instance of nfd-worker is supposed to be running on each node of the cluster.

      ##NFD-Topology-Updater
      NFD-Topology-Updater is a daemon responsible for examining allocated resources on a worker node to account for resources available to be allocated to new pod on a per-zone basis (where a zone can be a NUMA node). It then communicates the information to nfd-master which does the NodeResourceTopology CR creation corresponding to all the nodes in the cluster. One instance of nfd-topology-updater is supposed to be running on each node of the cluster.
    displayName: Node Feature Discovery Operator
    installModes:
    - supported: true
      type: OwnNamespace
    - supported: true
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: false
      type: AllNamespaces
    keywords:
    - feature-discovery
    - feature-detection
    - node-labels
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
    links:
    - name: Node Feature Discovery Operator
      url: https://docs.openshift.com/container-platform/4.17/hardware_enablement/psap-node-feature-discovery-operator.html
    - name: Node Feature Discovery Documentation
      url: https://kubernetes-sigs.github.io/node-feature-discovery/stable/get-started/index.html
    maintainers:
    - email: support@redhat.com
      name: Red Hat Support
    maturity: stable
    minKubeVersion: 1.22.0
    provider:
      name: Red Hat
      url: https://github.com/openshift/cluster-nfd-operator
relatedImages:
- image: registry.redhat.io/openshift4/ose-cluster-nfd-operator-bundle@sha256:e5c027d746a8c23f629551ada2840bbea5d3bdfa2b246e8eff376e21682b6478
  name: ""
- image: registry.redhat.io/openshift4/ose-cluster-nfd-rhel9-operator@sha256:de929b45521a7c4098e2f434b063da23c73a19be51dffc0a614fb60047f18211
  name: ose-cluster-nfd-rhel9-operator
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy-rhel9@sha256:3fa22124916523b958c67af8ad652e73a2c3d68bb5579da1cba1ade537f3b7ae
  name: ose-kube-rbac-proxy-rhel9
- image: registry.redhat.io/openshift4/ose-node-feature-discovery-rhel9@sha256:b0f786e21798c27905c6fdf189bd91cae1f5ddd58ad101a28dbb8b5de92069ce
  name: ose-node-feature-discovery-rhel9
schema: olm.bundle
---
image: registry.redhat.io/openshift4/ose-cluster-nfd-operator-bundle@sha256:f0425ef9a69ab215e76a188bf4c34c70c31345b4298f6ef4e2a8b80daeb4d461
name: nfd.4.17.0-202411190204
package: nfd
properties:
- type: olm.gvk
  value:
    group: nfd.openshift.io
    kind: NodeFeature
    version: v1alpha1
- type: olm.gvk
  value:
    group: nfd.openshift.io
    kind: NodeFeatureDiscovery
    version: v1
- type: olm.gvk
  value:
    group: nfd.openshift.io
    kind: NodeFeatureGroup
    version: v1alpha1
- type: olm.gvk
  value:
    group: nfd.openshift.io
    kind: NodeFeatureRule
    version: v1alpha1
- type: olm.gvk
  value:
    group: topology.node.k8s.io
    kind: NodeResourceTopology
    version: v1alpha1
- type: olm.gvk
  value:
    group: topology.node.k8s.io
    kind: NodeResourceTopology
    version: v1alpha2
- type: olm.package
  value:
    packageName: nfd
    version: 4.17.0-202411190204
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "nfd.openshift.io/v1",
            "kind": "NodeFeatureDiscovery",
            "metadata": {
              "name": "nfd-instance",
              "namespace": "openshift-nfd"
            },
            "spec": {
              "customConfig": {
                "configData": "#    - name: \"more.kernel.features\"\n#      matchOn:\n#      - loadedKMod: [\"example_kmod3\"]\n#    - name: \"more.features.by.nodename\"\n#      value: customValue\n#      matchOn:\n#      - nodename: [\"special-.*-node-.*\"]\n"
              },
              "operand": {
                "image": "registry.redhat.io/openshift4/ose-node-feature-discovery-rhel9@sha256:4137433f0b8fa292d6eac9951c5fa9215c34645381695d9560f21303b786451d",
                "imagePullPolicy": "IfNotPresent",
                "servicePort": 12000
              },
              "workerConfig": {
                "configData": "core:\n#  labelWhiteList:\n#  noPublish: false\n  sleepInterval: 60s\n#  sources: [all]\n#  klog:\n#    addDirHeader: false\n#    alsologtostderr: false\n#    logBacktraceAt:\n#    logtostderr: true\n#    skipHeaders: false\n#    stderrthreshold: 2\n#    v: 0\n#    vmodule:\n##   NOTE: the following options are not dynamically run-time \n##          configurable and require a nfd-worker restart to take effect\n##          after being changed\n#    logDir:\n#    logFile:\n#    logFileMaxSize: 1800\n#    skipLogHeaders: false\nsources:\n#  cpu:\n#    cpuid:\n##     NOTE: whitelist has priority over blacklist\n#      attributeBlacklist:\n#        - \"BMI1\"\n#        - \"BMI2\"\n#        - \"CLMUL\"\n#        - \"CMOV\"\n#        - \"CX16\"\n#        - \"ERMS\"\n#        - \"F16C\"\n#        - \"HTT\"\n#        - \"LZCNT\"\n#        - \"MMX\"\n#        - \"MMXEXT\"\n#        - \"NX\"\n#        - \"POPCNT\"\n#        - \"RDRAND\"\n#        - \"RDSEED\"\n#        - \"RDTSCP\"\n#        - \"SGX\"\n#        - \"SSE\"\n#        - \"SSE2\"\n#        - \"SSE3\"\n#        - \"SSE4.1\"\n#        - \"SSE4.2\"\n#        - \"SSSE3\"\n#      attributeWhitelist:\n#  kernel:\n#    kconfigFile: \"/path/to/kconfig\"\n#    configOpts:\n#      - \"NO_HZ\"\n#      - \"X86\"\n#      - \"DMI\"\n  pci:\n    deviceClassWhitelist:\n      - \"0200\"\n      - \"03\"\n      - \"12\"\n    deviceLabelFields:\n#      - \"class\"\n      - \"vendor\"\n#      - \"device\"\n#      - \"subsystem_vendor\"\n#      - \"subsystem_device\"\n#  usb:\n#    deviceClassWhitelist:\n#      - \"0e\"\n#      - \"ef\"\n#      - \"fe\"\n#      - \"ff\"\n#    deviceLabelFields:\n#      - \"class\"\n#      - \"vendor\"\n#      - \"device\"\n#  custom:\n#    - name: \"my.kernel.feature\"\n#      matchOn:\n#        - loadedKMod: [\"example_kmod1\", \"example_kmod2\"]\n#    - name: \"my.pci.feature\"\n#      matchOn:\n#        - pciId:\n#            class: [\"0200\"]\n#            vendor: [\"15b3\"]\n#            device: [\"1014\", \"1017\"]\n#        - pciId :\n#            vendor: [\"8086\"]\n#            device: [\"1000\", \"1100\"]\n#    - name: \"my.usb.feature\"\n#      matchOn:\n#        - usbId:\n#          class: [\"ff\"]\n#          vendor: [\"03e7\"]\n#          device: [\"2485\"]\n#        - usbId:\n#          class: [\"fe\"]\n#          vendor: [\"1a6e\"]\n#          device: [\"089a\"]\n#    - name: \"my.combined.feature\"\n#      matchOn:\n#        - pciId:\n#            vendor: [\"15b3\"]\n#            device: [\"1014\", \"1017\"]\n#          loadedKMod : [\"vendor_kmod1\", \"vendor_kmod2\"]\n"
              }
            }
          },
          {
            "apiVersion": "nfd.openshift.io/v1alpha1",
            "kind": "NodeFeatureRule",
            "metadata": {
              "name": "my-sample-rule-object"
            },
            "spec": {
              "rules": [
                {
                  "labels": {
                    "my-sample-feature": "true"
                  },
                  "matchFeatures": [
                    {
                      "feature": "kernel.loadedmodule",
                      "matchExpressions": {
                        "dummy": {
                          "op": "Exists"
                        }
                      }
                    },
                    {
                      "feature": "kernel.config",
                      "matchExpressions": {
                        "X86": {
                          "op": "In",
                          "value": [
                            "y"
                          ]
                        }
                      }
                    }
                  ],
                  "name": "my sample rule"
                }
              ]
            }
          }
        ]
      capabilities: Deep Insights
      categories: Integration & Delivery,OpenShift Optional
      containerImage: registry.redhat.io/openshift4/ose-cluster-nfd-rhel9-operator@sha256:cd782d9b521a51c5b4e60a0a6bf6f4201f05faac7a02455ea3ede4592626a73e
      createdAt: "2024-07-28T08:10:39Z"
      description: |-
        The Node Feature Discovery Operator manages the detection of hardware features and configuration in a Kubernetes cluster by labeling the nodes with hardware-specific information. The Node Feature Discovery (NFD) will label the host with node-specific attributes, like PCI cards, kernel, or OS version, and many more.

        NFD consists  of the following software components:

        The NFD Operator is based on the Operator Framework an open source toolkit to manage Kubernetes native applications, called Operators, in an effective, automated, and scalable way.

        ##NFD-Master
        NFD-Master is the daemon responsible for communication towards the Kubernetes API. That is, it receives labeling requests from the worker and modifies node objects accordingly.

        ##NFD-Worker
        NFD-Worker is a daemon responsible for feature detection. It then communicates the information to nfd-master which does the actual node labeling. One instance of nfd-worker is supposed to be running on each node of the cluster.

        ##NFD-Topology-Updater
        NFD-Topology-Updater is a daemon responsible for examining allocated resources on a worker node to account for resources available to be allocated to new pod on a per-zone basis (where a zone can be a NUMA node). It then communicates the information to nfd-master which does the NodeResourceTopology CR creation corresponding to all the nodes in the cluster. One instance of nfd-topology-updater is supposed to be running on each node of the cluster.
      features.operators.openshift.io/cnf: "false"
      features.operators.openshift.io/cni: "false"
      features.operators.openshift.io/csi: "false"
      features.operators.openshift.io/disconnected: "true"
      features.operators.openshift.io/fips-compliant: "true"
      features.operators.openshift.io/proxy-aware: "true"
      features.operators.openshift.io/tls-profiles: "false"
      features.operators.openshift.io/token-auth-aws: "false"
      features.operators.openshift.io/token-auth-azure: "false"
      features.operators.openshift.io/token-auth-gcp: "false"
      olm.skipRange: '>=4.9.0 <4.17.0-202411190204'
      operatorframework.io/cluster-monitoring: "true"
      operatorframework.io/suggested-namespace: openshift-nfd
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Kubernetes Engine",
        "OpenShift Container Platform", "OpenShift Platform Plus"]'
      operators.operatorframework.io/builder: operator-sdk-v1.32.0
      operators.operatorframework.io/internal-objects: '["noderesourcetopologies.topology.node.k8s.io"]'
      operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
      provider: Red Hat
      repository: https://github.com/openshift/cluster-nfd-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: |
          The NodeFeatureDiscovery instance is the CustomResource being watched by the NFD-Operator, and holds all the needed information to setup the behaviour of the master and worker pods
        kind: NodeFeatureDiscovery
        name: nodefeaturediscoveries.nfd.openshift.io
        version: v1
      - kind: NodeFeatureGroup
        name: nodefeaturegroups.nfd.openshift.io
        version: v1alpha1
      - kind: NodeFeatureRule
        name: nodefeaturerules.nfd.openshift.io
        version: v1alpha1
      - kind: NodeFeature
        name: nodefeatures.nfd.openshift.io
        version: v1alpha1
      - description: |
          NodeResourceTopology resource describes node resources and their topology.
        kind: NodeResourceTopology
        name: noderesourcetopologies.topology.node.k8s.io
        version: v1alpha1
      - kind: NodeResourceTopology
        name: noderesourcetopologies.topology.node.k8s.io
        version: v1alpha2
    description: |-
      The Node Feature Discovery Operator manages the detection of hardware features and configuration in a Kubernetes cluster by labeling the nodes with hardware-specific information. The Node Feature Discovery (NFD) will label the host with node-specific attributes, like PCI cards, kernel, or OS version, and many more.

      NFD consists  of the following software components:

      The NFD Operator is based on the Operator Framework an open source toolkit to manage Kubernetes native applications, called Operators, in an effective, automated, and scalable way.

      ##NFD-Master
      NFD-Master is the daemon responsible for communication towards the Kubernetes API. That is, it receives labeling requests from the worker and modifies node objects accordingly.

      ##NFD-Worker
      NFD-Worker is a daemon responsible for feature detection. It then communicates the information to nfd-master which does the actual node labeling. One instance of nfd-worker is supposed to be running on each node of the cluster.

      ##NFD-Topology-Updater
      NFD-Topology-Updater is a daemon responsible for examining allocated resources on a worker node to account for resources available to be allocated to new pod on a per-zone basis (where a zone can be a NUMA node). It then communicates the information to nfd-master which does the NodeResourceTopology CR creation corresponding to all the nodes in the cluster. One instance of nfd-topology-updater is supposed to be running on each node of the cluster.
    displayName: Node Feature Discovery Operator
    installModes:
    - supported: true
      type: OwnNamespace
    - supported: true
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: false
      type: AllNamespaces
    keywords:
    - feature-discovery
    - feature-detection
    - node-labels
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
    links:
    - name: Node Feature Discovery Operator
      url: https://docs.openshift.com/container-platform/4.17/hardware_enablement/psap-node-feature-discovery-operator.html
    - name: Node Feature Discovery Documentation
      url: https://kubernetes-sigs.github.io/node-feature-discovery/stable/get-started/index.html
    maintainers:
    - email: support@redhat.com
      name: Red Hat Support
    maturity: stable
    minKubeVersion: 1.22.0
    provider:
      name: Red Hat
      url: https://github.com/openshift/cluster-nfd-operator
relatedImages:
- image: registry.redhat.io/openshift4/ose-cluster-nfd-operator-bundle@sha256:f0425ef9a69ab215e76a188bf4c34c70c31345b4298f6ef4e2a8b80daeb4d461
  name: ""
- image: registry.redhat.io/openshift4/ose-cluster-nfd-rhel9-operator@sha256:cd782d9b521a51c5b4e60a0a6bf6f4201f05faac7a02455ea3ede4592626a73e
  name: ose-cluster-nfd-rhel9-operator
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy-rhel9@sha256:fcb0bad899e6c35cbb03c7433c1d46216ad18203a4c40cf095a555251484abfc
  name: ose-kube-rbac-proxy-rhel9
- image: registry.redhat.io/openshift4/ose-node-feature-discovery-rhel9@sha256:4137433f0b8fa292d6eac9951c5fa9215c34645381695d9560f21303b786451d
  name: ose-node-feature-discovery-rhel9
schema: olm.bundle
---
image: registry.redhat.io/openshift4/ose-cluster-nfd-operator-bundle@sha256:b8df4806b82839ee8a48fd69ba8f06bd4c3db06f71bfc25e19c3e10299be8e90
name: nfd.4.17.0-202411251634
package: nfd
properties:
- type: olm.gvk
  value:
    group: nfd.openshift.io
    kind: NodeFeature
    version: v1alpha1
- type: olm.gvk
  value:
    group: nfd.openshift.io
    kind: NodeFeatureDiscovery
    version: v1
- type: olm.gvk
  value:
    group: nfd.openshift.io
    kind: NodeFeatureGroup
    version: v1alpha1
- type: olm.gvk
  value:
    group: nfd.openshift.io
    kind: NodeFeatureRule
    version: v1alpha1
- type: olm.gvk
  value:
    group: topology.node.k8s.io
    kind: NodeResourceTopology
    version: v1alpha1
- type: olm.gvk
  value:
    group: topology.node.k8s.io
    kind: NodeResourceTopology
    version: v1alpha2
- type: olm.package
  value:
    packageName: nfd
    version: 4.17.0-202411251634
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "nfd.openshift.io/v1",
            "kind": "NodeFeatureDiscovery",
            "metadata": {
              "name": "nfd-instance",
              "namespace": "openshift-nfd"
            },
            "spec": {
              "customConfig": {
                "configData": "#    - name: \"more.kernel.features\"\n#      matchOn:\n#      - loadedKMod: [\"example_kmod3\"]\n#    - name: \"more.features.by.nodename\"\n#      value: customValue\n#      matchOn:\n#      - nodename: [\"special-.*-node-.*\"]\n"
              },
              "operand": {
                "image": "registry.redhat.io/openshift4/ose-node-feature-discovery-rhel9@sha256:ed6ec57fefd2b3ae9b9c98bbcbbaa22b92a38a72774b77b4dd97370365006c1f",
                "imagePullPolicy": "IfNotPresent",
                "servicePort": 12000
              },
              "workerConfig": {
                "configData": "core:\n#  labelWhiteList:\n#  noPublish: false\n  sleepInterval: 60s\n#  sources: [all]\n#  klog:\n#    addDirHeader: false\n#    alsologtostderr: false\n#    logBacktraceAt:\n#    logtostderr: true\n#    skipHeaders: false\n#    stderrthreshold: 2\n#    v: 0\n#    vmodule:\n##   NOTE: the following options are not dynamically run-time \n##          configurable and require a nfd-worker restart to take effect\n##          after being changed\n#    logDir:\n#    logFile:\n#    logFileMaxSize: 1800\n#    skipLogHeaders: false\nsources:\n#  cpu:\n#    cpuid:\n##     NOTE: whitelist has priority over blacklist\n#      attributeBlacklist:\n#        - \"BMI1\"\n#        - \"BMI2\"\n#        - \"CLMUL\"\n#        - \"CMOV\"\n#        - \"CX16\"\n#        - \"ERMS\"\n#        - \"F16C\"\n#        - \"HTT\"\n#        - \"LZCNT\"\n#        - \"MMX\"\n#        - \"MMXEXT\"\n#        - \"NX\"\n#        - \"POPCNT\"\n#        - \"RDRAND\"\n#        - \"RDSEED\"\n#        - \"RDTSCP\"\n#        - \"SGX\"\n#        - \"SSE\"\n#        - \"SSE2\"\n#        - \"SSE3\"\n#        - \"SSE4.1\"\n#        - \"SSE4.2\"\n#        - \"SSSE3\"\n#      attributeWhitelist:\n#  kernel:\n#    kconfigFile: \"/path/to/kconfig\"\n#    configOpts:\n#      - \"NO_HZ\"\n#      - \"X86\"\n#      - \"DMI\"\n  pci:\n    deviceClassWhitelist:\n      - \"0200\"\n      - \"03\"\n      - \"12\"\n    deviceLabelFields:\n#      - \"class\"\n      - \"vendor\"\n#      - \"device\"\n#      - \"subsystem_vendor\"\n#      - \"subsystem_device\"\n#  usb:\n#    deviceClassWhitelist:\n#      - \"0e\"\n#      - \"ef\"\n#      - \"fe\"\n#      - \"ff\"\n#    deviceLabelFields:\n#      - \"class\"\n#      - \"vendor\"\n#      - \"device\"\n#  custom:\n#    - name: \"my.kernel.feature\"\n#      matchOn:\n#        - loadedKMod: [\"example_kmod1\", \"example_kmod2\"]\n#    - name: \"my.pci.feature\"\n#      matchOn:\n#        - pciId:\n#            class: [\"0200\"]\n#            vendor: [\"15b3\"]\n#            device: [\"1014\", \"1017\"]\n#        - pciId :\n#            vendor: [\"8086\"]\n#            device: [\"1000\", \"1100\"]\n#    - name: \"my.usb.feature\"\n#      matchOn:\n#        - usbId:\n#          class: [\"ff\"]\n#          vendor: [\"03e7\"]\n#          device: [\"2485\"]\n#        - usbId:\n#          class: [\"fe\"]\n#          vendor: [\"1a6e\"]\n#          device: [\"089a\"]\n#    - name: \"my.combined.feature\"\n#      matchOn:\n#        - pciId:\n#            vendor: [\"15b3\"]\n#            device: [\"1014\", \"1017\"]\n#          loadedKMod : [\"vendor_kmod1\", \"vendor_kmod2\"]\n"
              }
            }
          },
          {
            "apiVersion": "nfd.openshift.io/v1alpha1",
            "kind": "NodeFeatureRule",
            "metadata": {
              "name": "my-sample-rule-object"
            },
            "spec": {
              "rules": [
                {
                  "labels": {
                    "my-sample-feature": "true"
                  },
                  "matchFeatures": [
                    {
                      "feature": "kernel.loadedmodule",
                      "matchExpressions": {
                        "dummy": {
                          "op": "Exists"
                        }
                      }
                    },
                    {
                      "feature": "kernel.config",
                      "matchExpressions": {
                        "X86": {
                          "op": "In",
                          "value": [
                            "y"
                          ]
                        }
                      }
                    }
                  ],
                  "name": "my sample rule"
                }
              ]
            }
          }
        ]
      capabilities: Deep Insights
      categories: Integration & Delivery,OpenShift Optional
      containerImage: registry.redhat.io/openshift4/ose-cluster-nfd-rhel9-operator@sha256:55bbd058fed3c54b67db835b297205df81a2f239eb081ce7c1d093e867c03ac2
      createdAt: "2024-07-28T08:10:39Z"
      description: |-
        The Node Feature Discovery Operator manages the detection of hardware features and configuration in a Kubernetes cluster by labeling the nodes with hardware-specific information. The Node Feature Discovery (NFD) will label the host with node-specific attributes, like PCI cards, kernel, or OS version, and many more.

        NFD consists  of the following software components:

        The NFD Operator is based on the Operator Framework an open source toolkit to manage Kubernetes native applications, called Operators, in an effective, automated, and scalable way.

        ##NFD-Master
        NFD-Master is the daemon responsible for communication towards the Kubernetes API. That is, it receives labeling requests from the worker and modifies node objects accordingly.

        ##NFD-Worker
        NFD-Worker is a daemon responsible for feature detection. It then communicates the information to nfd-master which does the actual node labeling. One instance of nfd-worker is supposed to be running on each node of the cluster.

        ##NFD-Topology-Updater
        NFD-Topology-Updater is a daemon responsible for examining allocated resources on a worker node to account for resources available to be allocated to new pod on a per-zone basis (where a zone can be a NUMA node). It then communicates the information to nfd-master which does the NodeResourceTopology CR creation corresponding to all the nodes in the cluster. One instance of nfd-topology-updater is supposed to be running on each node of the cluster.
      features.operators.openshift.io/cnf: "false"
      features.operators.openshift.io/cni: "false"
      features.operators.openshift.io/csi: "false"
      features.operators.openshift.io/disconnected: "true"
      features.operators.openshift.io/fips-compliant: "true"
      features.operators.openshift.io/proxy-aware: "true"
      features.operators.openshift.io/tls-profiles: "false"
      features.operators.openshift.io/token-auth-aws: "false"
      features.operators.openshift.io/token-auth-azure: "false"
      features.operators.openshift.io/token-auth-gcp: "false"
      olm.skipRange: '>=4.9.0 <4.17.0-202411251634'
      operatorframework.io/cluster-monitoring: "true"
      operatorframework.io/suggested-namespace: openshift-nfd
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Kubernetes Engine",
        "OpenShift Container Platform", "OpenShift Platform Plus"]'
      operators.operatorframework.io/builder: operator-sdk-v1.32.0
      operators.operatorframework.io/internal-objects: '["noderesourcetopologies.topology.node.k8s.io"]'
      operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
      provider: Red Hat
      repository: https://github.com/openshift/cluster-nfd-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: |
          The NodeFeatureDiscovery instance is the CustomResource being watched by the NFD-Operator, and holds all the needed information to setup the behaviour of the master and worker pods
        kind: NodeFeatureDiscovery
        name: nodefeaturediscoveries.nfd.openshift.io
        version: v1
      - kind: NodeFeatureGroup
        name: nodefeaturegroups.nfd.openshift.io
        version: v1alpha1
      - kind: NodeFeatureRule
        name: nodefeaturerules.nfd.openshift.io
        version: v1alpha1
      - kind: NodeFeature
        name: nodefeatures.nfd.openshift.io
        version: v1alpha1
      - description: |
          NodeResourceTopology resource describes node resources and their topology.
        kind: NodeResourceTopology
        name: noderesourcetopologies.topology.node.k8s.io
        version: v1alpha1
      - kind: NodeResourceTopology
        name: noderesourcetopologies.topology.node.k8s.io
        version: v1alpha2
    description: |-
      The Node Feature Discovery Operator manages the detection of hardware features and configuration in a Kubernetes cluster by labeling the nodes with hardware-specific information. The Node Feature Discovery (NFD) will label the host with node-specific attributes, like PCI cards, kernel, or OS version, and many more.

      NFD consists  of the following software components:

      The NFD Operator is based on the Operator Framework an open source toolkit to manage Kubernetes native applications, called Operators, in an effective, automated, and scalable way.

      ##NFD-Master
      NFD-Master is the daemon responsible for communication towards the Kubernetes API. That is, it receives labeling requests from the worker and modifies node objects accordingly.

      ##NFD-Worker
      NFD-Worker is a daemon responsible for feature detection. It then communicates the information to nfd-master which does the actual node labeling. One instance of nfd-worker is supposed to be running on each node of the cluster.

      ##NFD-Topology-Updater
      NFD-Topology-Updater is a daemon responsible for examining allocated resources on a worker node to account for resources available to be allocated to new pod on a per-zone basis (where a zone can be a NUMA node). It then communicates the information to nfd-master which does the NodeResourceTopology CR creation corresponding to all the nodes in the cluster. One instance of nfd-topology-updater is supposed to be running on each node of the cluster.
    displayName: Node Feature Discovery Operator
    installModes:
    - supported: true
      type: OwnNamespace
    - supported: true
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: false
      type: AllNamespaces
    keywords:
    - feature-discovery
    - feature-detection
    - node-labels
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
    links:
    - name: Node Feature Discovery Operator
      url: https://docs.openshift.com/container-platform/4.17/hardware_enablement/psap-node-feature-discovery-operator.html
    - name: Node Feature Discovery Documentation
      url: https://kubernetes-sigs.github.io/node-feature-discovery/stable/get-started/index.html
    maintainers:
    - email: support@redhat.com
      name: Red Hat Support
    maturity: stable
    minKubeVersion: 1.22.0
    provider:
      name: Red Hat
      url: https://github.com/openshift/cluster-nfd-operator
relatedImages:
- image: registry.redhat.io/openshift4/ose-cluster-nfd-operator-bundle@sha256:b8df4806b82839ee8a48fd69ba8f06bd4c3db06f71bfc25e19c3e10299be8e90
  name: ""
- image: registry.redhat.io/openshift4/ose-cluster-nfd-rhel9-operator@sha256:55bbd058fed3c54b67db835b297205df81a2f239eb081ce7c1d093e867c03ac2
  name: ose-cluster-nfd-rhel9-operator
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy-rhel9@sha256:d58db1ada34f964a618d34c498776c6400f4fdb3ec89e3e1f2ab6722d8f2f3da
  name: ose-kube-rbac-proxy-rhel9
- image: registry.redhat.io/openshift4/ose-node-feature-discovery-rhel9@sha256:ed6ec57fefd2b3ae9b9c98bbcbbaa22b92a38a72774b77b4dd97370365006c1f
  name: ose-node-feature-discovery-rhel9
schema: olm.bundle
---
image: registry.redhat.io/openshift4/ose-cluster-nfd-operator-bundle@sha256:8d05baf04a1f614ca0a505a2c8679cfdba0809267424e55eb0184951210c58fe
name: nfd.4.17.0-202412051604
package: nfd
properties:
- type: olm.gvk
  value:
    group: nfd.openshift.io
    kind: NodeFeature
    version: v1alpha1
- type: olm.gvk
  value:
    group: nfd.openshift.io
    kind: NodeFeatureDiscovery
    version: v1
- type: olm.gvk
  value:
    group: nfd.openshift.io
    kind: NodeFeatureGroup
    version: v1alpha1
- type: olm.gvk
  value:
    group: nfd.openshift.io
    kind: NodeFeatureRule
    version: v1alpha1
- type: olm.gvk
  value:
    group: topology.node.k8s.io
    kind: NodeResourceTopology
    version: v1alpha1
- type: olm.gvk
  value:
    group: topology.node.k8s.io
    kind: NodeResourceTopology
    version: v1alpha2
- type: olm.package
  value:
    packageName: nfd
    version: 4.17.0-202412051604
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "nfd.openshift.io/v1",
            "kind": "NodeFeatureDiscovery",
            "metadata": {
              "name": "nfd-instance",
              "namespace": "openshift-nfd"
            },
            "spec": {
              "customConfig": {
                "configData": "#    - name: \"more.kernel.features\"\n#      matchOn:\n#      - loadedKMod: [\"example_kmod3\"]\n#    - name: \"more.features.by.nodename\"\n#      value: customValue\n#      matchOn:\n#      - nodename: [\"special-.*-node-.*\"]\n"
              },
              "operand": {
                "image": "registry.redhat.io/openshift4/ose-node-feature-discovery-rhel9@sha256:b2c67faebc94b5fea1c2df64e475d3ede1c0e3f58b5c711ebcd00a51b6069d97",
                "imagePullPolicy": "IfNotPresent",
                "servicePort": 12000
              },
              "workerConfig": {
                "configData": "core:\n#  labelWhiteList:\n#  noPublish: false\n  sleepInterval: 60s\n#  sources: [all]\n#  klog:\n#    addDirHeader: false\n#    alsologtostderr: false\n#    logBacktraceAt:\n#    logtostderr: true\n#    skipHeaders: false\n#    stderrthreshold: 2\n#    v: 0\n#    vmodule:\n##   NOTE: the following options are not dynamically run-time \n##          configurable and require a nfd-worker restart to take effect\n##          after being changed\n#    logDir:\n#    logFile:\n#    logFileMaxSize: 1800\n#    skipLogHeaders: false\nsources:\n#  cpu:\n#    cpuid:\n##     NOTE: whitelist has priority over blacklist\n#      attributeBlacklist:\n#        - \"BMI1\"\n#        - \"BMI2\"\n#        - \"CLMUL\"\n#        - \"CMOV\"\n#        - \"CX16\"\n#        - \"ERMS\"\n#        - \"F16C\"\n#        - \"HTT\"\n#        - \"LZCNT\"\n#        - \"MMX\"\n#        - \"MMXEXT\"\n#        - \"NX\"\n#        - \"POPCNT\"\n#        - \"RDRAND\"\n#        - \"RDSEED\"\n#        - \"RDTSCP\"\n#        - \"SGX\"\n#        - \"SSE\"\n#        - \"SSE2\"\n#        - \"SSE3\"\n#        - \"SSE4.1\"\n#        - \"SSE4.2\"\n#        - \"SSSE3\"\n#      attributeWhitelist:\n#  kernel:\n#    kconfigFile: \"/path/to/kconfig\"\n#    configOpts:\n#      - \"NO_HZ\"\n#      - \"X86\"\n#      - \"DMI\"\n  pci:\n    deviceClassWhitelist:\n      - \"0200\"\n      - \"03\"\n      - \"12\"\n    deviceLabelFields:\n#      - \"class\"\n      - \"vendor\"\n#      - \"device\"\n#      - \"subsystem_vendor\"\n#      - \"subsystem_device\"\n#  usb:\n#    deviceClassWhitelist:\n#      - \"0e\"\n#      - \"ef\"\n#      - \"fe\"\n#      - \"ff\"\n#    deviceLabelFields:\n#      - \"class\"\n#      - \"vendor\"\n#      - \"device\"\n#  custom:\n#    - name: \"my.kernel.feature\"\n#      matchOn:\n#        - loadedKMod: [\"example_kmod1\", \"example_kmod2\"]\n#    - name: \"my.pci.feature\"\n#      matchOn:\n#        - pciId:\n#            class: [\"0200\"]\n#            vendor: [\"15b3\"]\n#            device: [\"1014\", \"1017\"]\n#        - pciId :\n#            vendor: [\"8086\"]\n#            device: [\"1000\", \"1100\"]\n#    - name: \"my.usb.feature\"\n#      matchOn:\n#        - usbId:\n#          class: [\"ff\"]\n#          vendor: [\"03e7\"]\n#          device: [\"2485\"]\n#        - usbId:\n#          class: [\"fe\"]\n#          vendor: [\"1a6e\"]\n#          device: [\"089a\"]\n#    - name: \"my.combined.feature\"\n#      matchOn:\n#        - pciId:\n#            vendor: [\"15b3\"]\n#            device: [\"1014\", \"1017\"]\n#          loadedKMod : [\"vendor_kmod1\", \"vendor_kmod2\"]\n"
              }
            }
          },
          {
            "apiVersion": "nfd.openshift.io/v1alpha1",
            "kind": "NodeFeatureRule",
            "metadata": {
              "name": "my-sample-rule-object"
            },
            "spec": {
              "rules": [
                {
                  "labels": {
                    "my-sample-feature": "true"
                  },
                  "matchFeatures": [
                    {
                      "feature": "kernel.loadedmodule",
                      "matchExpressions": {
                        "dummy": {
                          "op": "Exists"
                        }
                      }
                    },
                    {
                      "feature": "kernel.config",
                      "matchExpressions": {
                        "X86": {
                          "op": "In",
                          "value": [
                            "y"
                          ]
                        }
                      }
                    }
                  ],
                  "name": "my sample rule"
                }
              ]
            }
          }
        ]
      capabilities: Deep Insights
      categories: Integration & Delivery,OpenShift Optional
      containerImage: registry.redhat.io/openshift4/ose-cluster-nfd-rhel9-operator@sha256:fd391358aed99e32f39d4bd225050e6cf36dd07b201fde5c33ea66d2caabb5a4
      createdAt: "2024-07-28T08:10:39Z"
      description: |-
        The Node Feature Discovery Operator manages the detection of hardware features and configuration in a Kubernetes cluster by labeling the nodes with hardware-specific information. The Node Feature Discovery (NFD) will label the host with node-specific attributes, like PCI cards, kernel, or OS version, and many more.

        NFD consists  of the following software components:

        The NFD Operator is based on the Operator Framework an open source toolkit to manage Kubernetes native applications, called Operators, in an effective, automated, and scalable way.

        ##NFD-Master
        NFD-Master is the daemon responsible for communication towards the Kubernetes API. That is, it receives labeling requests from the worker and modifies node objects accordingly.

        ##NFD-Worker
        NFD-Worker is a daemon responsible for feature detection. It then communicates the information to nfd-master which does the actual node labeling. One instance of nfd-worker is supposed to be running on each node of the cluster.

        ##NFD-Topology-Updater
        NFD-Topology-Updater is a daemon responsible for examining allocated resources on a worker node to account for resources available to be allocated to new pod on a per-zone basis (where a zone can be a NUMA node). It then communicates the information to nfd-master which does the NodeResourceTopology CR creation corresponding to all the nodes in the cluster. One instance of nfd-topology-updater is supposed to be running on each node of the cluster.
      features.operators.openshift.io/cnf: "false"
      features.operators.openshift.io/cni: "false"
      features.operators.openshift.io/csi: "false"
      features.operators.openshift.io/disconnected: "true"
      features.operators.openshift.io/fips-compliant: "true"
      features.operators.openshift.io/proxy-aware: "true"
      features.operators.openshift.io/tls-profiles: "false"
      features.operators.openshift.io/token-auth-aws: "false"
      features.operators.openshift.io/token-auth-azure: "false"
      features.operators.openshift.io/token-auth-gcp: "false"
      olm.skipRange: '>=4.9.0 <4.17.0-202412051604'
      operatorframework.io/cluster-monitoring: "true"
      operatorframework.io/suggested-namespace: openshift-nfd
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Kubernetes Engine",
        "OpenShift Container Platform", "OpenShift Platform Plus"]'
      operators.operatorframework.io/builder: operator-sdk-v1.32.0
      operators.operatorframework.io/internal-objects: '["noderesourcetopologies.topology.node.k8s.io"]'
      operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
      provider: Red Hat
      repository: https://github.com/openshift/cluster-nfd-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: |
          The NodeFeatureDiscovery instance is the CustomResource being watched by the NFD-Operator, and holds all the needed information to setup the behaviour of the master and worker pods
        kind: NodeFeatureDiscovery
        name: nodefeaturediscoveries.nfd.openshift.io
        version: v1
      - kind: NodeFeatureGroup
        name: nodefeaturegroups.nfd.openshift.io
        version: v1alpha1
      - kind: NodeFeatureRule
        name: nodefeaturerules.nfd.openshift.io
        version: v1alpha1
      - kind: NodeFeature
        name: nodefeatures.nfd.openshift.io
        version: v1alpha1
      - description: |
          NodeResourceTopology resource describes node resources and their topology.
        kind: NodeResourceTopology
        name: noderesourcetopologies.topology.node.k8s.io
        version: v1alpha1
      - kind: NodeResourceTopology
        name: noderesourcetopologies.topology.node.k8s.io
        version: v1alpha2
    description: |-
      The Node Feature Discovery Operator manages the detection of hardware features and configuration in a Kubernetes cluster by labeling the nodes with hardware-specific information. The Node Feature Discovery (NFD) will label the host with node-specific attributes, like PCI cards, kernel, or OS version, and many more.

      NFD consists  of the following software components:

      The NFD Operator is based on the Operator Framework an open source toolkit to manage Kubernetes native applications, called Operators, in an effective, automated, and scalable way.

      ##NFD-Master
      NFD-Master is the daemon responsible for communication towards the Kubernetes API. That is, it receives labeling requests from the worker and modifies node objects accordingly.

      ##NFD-Worker
      NFD-Worker is a daemon responsible for feature detection. It then communicates the information to nfd-master which does the actual node labeling. One instance of nfd-worker is supposed to be running on each node of the cluster.

      ##NFD-Topology-Updater
      NFD-Topology-Updater is a daemon responsible for examining allocated resources on a worker node to account for resources available to be allocated to new pod on a per-zone basis (where a zone can be a NUMA node). It then communicates the information to nfd-master which does the NodeResourceTopology CR creation corresponding to all the nodes in the cluster. One instance of nfd-topology-updater is supposed to be running on each node of the cluster.
    displayName: Node Feature Discovery Operator
    installModes:
    - supported: true
      type: OwnNamespace
    - supported: true
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: false
      type: AllNamespaces
    keywords:
    - feature-discovery
    - feature-detection
    - node-labels
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
    links:
    - name: Node Feature Discovery Operator
      url: https://docs.openshift.com/container-platform/4.17/hardware_enablement/psap-node-feature-discovery-operator.html
    - name: Node Feature Discovery Documentation
      url: https://kubernetes-sigs.github.io/node-feature-discovery/stable/get-started/index.html
    maintainers:
    - email: support@redhat.com
      name: Red Hat Support
    maturity: stable
    minKubeVersion: 1.22.0
    provider:
      name: Red Hat
      url: https://github.com/openshift/cluster-nfd-operator
relatedImages:
- image: registry.redhat.io/openshift4/ose-cluster-nfd-operator-bundle@sha256:8d05baf04a1f614ca0a505a2c8679cfdba0809267424e55eb0184951210c58fe
  name: ""
- image: registry.redhat.io/openshift4/ose-cluster-nfd-rhel9-operator@sha256:fd391358aed99e32f39d4bd225050e6cf36dd07b201fde5c33ea66d2caabb5a4
  name: ose-cluster-nfd-rhel9-operator
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy-rhel9@sha256:bd74305569e094d9bd5ad258904ea9ceb632c7f47f35c8daf44600c43b1224c3
  name: ose-kube-rbac-proxy-rhel9
- image: registry.redhat.io/openshift4/ose-node-feature-discovery-rhel9@sha256:b2c67faebc94b5fea1c2df64e475d3ede1c0e3f58b5c711ebcd00a51b6069d97
  name: ose-node-feature-discovery-rhel9
schema: olm.bundle
---
image: registry.redhat.io/openshift4/ose-cluster-nfd-operator-bundle@sha256:656e67821b36c4be8619f16382add200e49a594afb51a6789ae614f719fe372d
name: nfd.4.17.0-202412170235
package: nfd
properties:
- type: olm.gvk
  value:
    group: nfd.openshift.io
    kind: NodeFeature
    version: v1alpha1
- type: olm.gvk
  value:
    group: nfd.openshift.io
    kind: NodeFeatureDiscovery
    version: v1
- type: olm.gvk
  value:
    group: nfd.openshift.io
    kind: NodeFeatureGroup
    version: v1alpha1
- type: olm.gvk
  value:
    group: nfd.openshift.io
    kind: NodeFeatureRule
    version: v1alpha1
- type: olm.gvk
  value:
    group: topology.node.k8s.io
    kind: NodeResourceTopology
    version: v1alpha1
- type: olm.gvk
  value:
    group: topology.node.k8s.io
    kind: NodeResourceTopology
    version: v1alpha2
- type: olm.package
  value:
    packageName: nfd
    version: 4.17.0-202412170235
- type: olm.csv.metadata
  value:
    annotations:
      alm-examples: |-
        [
          {
            "apiVersion": "nfd.openshift.io/v1",
            "kind": "NodeFeatureDiscovery",
            "metadata": {
              "name": "nfd-instance",
              "namespace": "openshift-nfd"
            },
            "spec": {
              "customConfig": {
                "configData": "#    - name: \"more.kernel.features\"\n#      matchOn:\n#      - loadedKMod: [\"example_kmod3\"]\n#    - name: \"more.features.by.nodename\"\n#      value: customValue\n#      matchOn:\n#      - nodename: [\"special-.*-node-.*\"]\n"
              },
              "operand": {
                "image": "registry.redhat.io/openshift4/ose-node-feature-discovery-rhel9@sha256:00208889a98c5b767e201bd1427be07edd4388271d82f09bbe393a545e94ac42",
                "imagePullPolicy": "IfNotPresent",
                "servicePort": 12000
              },
              "workerConfig": {
                "configData": "core:\n#  labelWhiteList:\n#  noPublish: false\n  sleepInterval: 60s\n#  sources: [all]\n#  klog:\n#    addDirHeader: false\n#    alsologtostderr: false\n#    logBacktraceAt:\n#    logtostderr: true\n#    skipHeaders: false\n#    stderrthreshold: 2\n#    v: 0\n#    vmodule:\n##   NOTE: the following options are not dynamically run-time \n##          configurable and require a nfd-worker restart to take effect\n##          after being changed\n#    logDir:\n#    logFile:\n#    logFileMaxSize: 1800\n#    skipLogHeaders: false\nsources:\n#  cpu:\n#    cpuid:\n##     NOTE: whitelist has priority over blacklist\n#      attributeBlacklist:\n#        - \"BMI1\"\n#        - \"BMI2\"\n#        - \"CLMUL\"\n#        - \"CMOV\"\n#        - \"CX16\"\n#        - \"ERMS\"\n#        - \"F16C\"\n#        - \"HTT\"\n#        - \"LZCNT\"\n#        - \"MMX\"\n#        - \"MMXEXT\"\n#        - \"NX\"\n#        - \"POPCNT\"\n#        - \"RDRAND\"\n#        - \"RDSEED\"\n#        - \"RDTSCP\"\n#        - \"SGX\"\n#        - \"SSE\"\n#        - \"SSE2\"\n#        - \"SSE3\"\n#        - \"SSE4.1\"\n#        - \"SSE4.2\"\n#        - \"SSSE3\"\n#      attributeWhitelist:\n#  kernel:\n#    kconfigFile: \"/path/to/kconfig\"\n#    configOpts:\n#      - \"NO_HZ\"\n#      - \"X86\"\n#      - \"DMI\"\n  pci:\n    deviceClassWhitelist:\n      - \"0200\"\n      - \"03\"\n      - \"12\"\n    deviceLabelFields:\n#      - \"class\"\n      - \"vendor\"\n#      - \"device\"\n#      - \"subsystem_vendor\"\n#      - \"subsystem_device\"\n#  usb:\n#    deviceClassWhitelist:\n#      - \"0e\"\n#      - \"ef\"\n#      - \"fe\"\n#      - \"ff\"\n#    deviceLabelFields:\n#      - \"class\"\n#      - \"vendor\"\n#      - \"device\"\n#  custom:\n#    - name: \"my.kernel.feature\"\n#      matchOn:\n#        - loadedKMod: [\"example_kmod1\", \"example_kmod2\"]\n#    - name: \"my.pci.feature\"\n#      matchOn:\n#        - pciId:\n#            class: [\"0200\"]\n#            vendor: [\"15b3\"]\n#            device: [\"1014\", \"1017\"]\n#        - pciId :\n#            vendor: [\"8086\"]\n#            device: [\"1000\", \"1100\"]\n#    - name: \"my.usb.feature\"\n#      matchOn:\n#        - usbId:\n#          class: [\"ff\"]\n#          vendor: [\"03e7\"]\n#          device: [\"2485\"]\n#        - usbId:\n#          class: [\"fe\"]\n#          vendor: [\"1a6e\"]\n#          device: [\"089a\"]\n#    - name: \"my.combined.feature\"\n#      matchOn:\n#        - pciId:\n#            vendor: [\"15b3\"]\n#            device: [\"1014\", \"1017\"]\n#          loadedKMod : [\"vendor_kmod1\", \"vendor_kmod2\"]\n"
              }
            }
          },
          {
            "apiVersion": "nfd.openshift.io/v1alpha1",
            "kind": "NodeFeatureRule",
            "metadata": {
              "name": "my-sample-rule-object"
            },
            "spec": {
              "rules": [
                {
                  "labels": {
                    "my-sample-feature": "true"
                  },
                  "matchFeatures": [
                    {
                      "feature": "kernel.loadedmodule",
                      "matchExpressions": {
                        "dummy": {
                          "op": "Exists"
                        }
                      }
                    },
                    {
                      "feature": "kernel.config",
                      "matchExpressions": {
                        "X86": {
                          "op": "In",
                          "value": [
                            "y"
                          ]
                        }
                      }
                    }
                  ],
                  "name": "my sample rule"
                }
              ]
            }
          }
        ]
      capabilities: Deep Insights
      categories: Integration & Delivery,OpenShift Optional
      containerImage: registry.redhat.io/openshift4/ose-cluster-nfd-rhel9-operator@sha256:aaf41f3f4f9ce642627880ba6403a5f56941402640b403e275bc4b623e778ec0
      createdAt: "2024-07-28T08:10:39Z"
      description: |-
        The Node Feature Discovery Operator manages the detection of hardware features and configuration in a Kubernetes cluster by labeling the nodes with hardware-specific information. The Node Feature Discovery (NFD) will label the host with node-specific attributes, like PCI cards, kernel, or OS version, and many more.

        NFD consists  of the following software components:

        The NFD Operator is based on the Operator Framework an open source toolkit to manage Kubernetes native applications, called Operators, in an effective, automated, and scalable way.

        ##NFD-Master
        NFD-Master is the daemon responsible for communication towards the Kubernetes API. That is, it receives labeling requests from the worker and modifies node objects accordingly.

        ##NFD-Worker
        NFD-Worker is a daemon responsible for feature detection. It then communicates the information to nfd-master which does the actual node labeling. One instance of nfd-worker is supposed to be running on each node of the cluster.

        ##NFD-Topology-Updater
        NFD-Topology-Updater is a daemon responsible for examining allocated resources on a worker node to account for resources available to be allocated to new pod on a per-zone basis (where a zone can be a NUMA node). It then communicates the information to nfd-master which does the NodeResourceTopology CR creation corresponding to all the nodes in the cluster. One instance of nfd-topology-updater is supposed to be running on each node of the cluster.
      features.operators.openshift.io/cnf: "false"
      features.operators.openshift.io/cni: "false"
      features.operators.openshift.io/csi: "false"
      features.operators.openshift.io/disconnected: "true"
      features.operators.openshift.io/fips-compliant: "true"
      features.operators.openshift.io/proxy-aware: "true"
      features.operators.openshift.io/tls-profiles: "false"
      features.operators.openshift.io/token-auth-aws: "false"
      features.operators.openshift.io/token-auth-azure: "false"
      features.operators.openshift.io/token-auth-gcp: "false"
      olm.skipRange: '>=4.9.0 <4.17.0-202412170235'
      operatorframework.io/cluster-monitoring: "true"
      operatorframework.io/suggested-namespace: openshift-nfd
      operators.openshift.io/infrastructure-features: '["disconnected"]'
      operators.openshift.io/valid-subscription: '["OpenShift Kubernetes Engine",
        "OpenShift Container Platform", "OpenShift Platform Plus"]'
      operators.operatorframework.io/builder: operator-sdk-v1.32.0
      operators.operatorframework.io/internal-objects: '["noderesourcetopologies.topology.node.k8s.io"]'
      operators.operatorframework.io/project_layout: go.kubebuilder.io/v3
      provider: Red Hat
      repository: https://github.com/openshift/cluster-nfd-operator
      support: Red Hat
    apiServiceDefinitions: {}
    crdDescriptions:
      owned:
      - description: |
          The NodeFeatureDiscovery instance is the CustomResource being watched by the NFD-Operator, and holds all the needed information to setup the behaviour of the master and worker pods
        kind: NodeFeatureDiscovery
        name: nodefeaturediscoveries.nfd.openshift.io
        version: v1
      - kind: NodeFeatureGroup
        name: nodefeaturegroups.nfd.openshift.io
        version: v1alpha1
      - kind: NodeFeatureRule
        name: nodefeaturerules.nfd.openshift.io
        version: v1alpha1
      - kind: NodeFeature
        name: nodefeatures.nfd.openshift.io
        version: v1alpha1
      - description: |
          NodeResourceTopology resource describes node resources and their topology.
        kind: NodeResourceTopology
        name: noderesourcetopologies.topology.node.k8s.io
        version: v1alpha1
      - kind: NodeResourceTopology
        name: noderesourcetopologies.topology.node.k8s.io
        version: v1alpha2
    description: |-
      The Node Feature Discovery Operator manages the detection of hardware features and configuration in a Kubernetes cluster by labeling the nodes with hardware-specific information. The Node Feature Discovery (NFD) will label the host with node-specific attributes, like PCI cards, kernel, or OS version, and many more.

      NFD consists  of the following software components:

      The NFD Operator is based on the Operator Framework an open source toolkit to manage Kubernetes native applications, called Operators, in an effective, automated, and scalable way.

      ##NFD-Master
      NFD-Master is the daemon responsible for communication towards the Kubernetes API. That is, it receives labeling requests from the worker and modifies node objects accordingly.

      ##NFD-Worker
      NFD-Worker is a daemon responsible for feature detection. It then communicates the information to nfd-master which does the actual node labeling. One instance of nfd-worker is supposed to be running on each node of the cluster.

      ##NFD-Topology-Updater
      NFD-Topology-Updater is a daemon responsible for examining allocated resources on a worker node to account for resources available to be allocated to new pod on a per-zone basis (where a zone can be a NUMA node). It then communicates the information to nfd-master which does the NodeResourceTopology CR creation corresponding to all the nodes in the cluster. One instance of nfd-topology-updater is supposed to be running on each node of the cluster.
    displayName: Node Feature Discovery Operator
    installModes:
    - supported: true
      type: OwnNamespace
    - supported: true
      type: SingleNamespace
    - supported: false
      type: MultiNamespace
    - supported: false
      type: AllNamespaces
    keywords:
    - feature-discovery
    - feature-detection
    - node-labels
    labels:
      operatorframework.io/arch.amd64: supported
      operatorframework.io/arch.arm64: supported
      operatorframework.io/arch.ppc64le: supported
      operatorframework.io/arch.s390x: supported
    links:
    - name: Node Feature Discovery Operator
      url: https://docs.openshift.com/container-platform/4.17/hardware_enablement/psap-node-feature-discovery-operator.html
    - name: Node Feature Discovery Documentation
      url: https://kubernetes-sigs.github.io/node-feature-discovery/stable/get-started/index.html
    maintainers:
    - email: support@redhat.com
      name: Red Hat Support
    maturity: stable
    minKubeVersion: 1.22.0
    provider:
      name: Red Hat
      url: https://github.com/openshift/cluster-nfd-operator
relatedImages:
- image: registry.redhat.io/openshift4/ose-cluster-nfd-operator-bundle@sha256:656e67821b36c4be8619f16382add200e49a594afb51a6789ae614f719fe372d
  name: ""
- image: registry.redhat.io/openshift4/ose-cluster-nfd-rhel9-operator@sha256:aaf41f3f4f9ce642627880ba6403a5f56941402640b403e275bc4b623e778ec0
  name: ose-cluster-nfd-rhel9-operator
- image: registry.redhat.io/openshift4/ose-kube-rbac-proxy-rhel9@sha256:3fcd8e2bf0bcb8ff8c93a87af2c59a3bcae7be8792f9d3236c9b5bbd9b6db3b2
  name: ose-kube-rbac-proxy-rhel9
- image: registry.redhat.io/openshift4/ose-node-feature-discovery-rhel9@sha256:00208889a98c5b767e201bd1427be07edd4388271d82f09bbe393a545e94ac42
  name: ose-node-feature-discovery-rhel9
schema: olm.bundle
